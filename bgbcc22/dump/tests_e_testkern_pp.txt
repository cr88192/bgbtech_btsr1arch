/*"tests/e_testkern.S"10*/ .section .bss
.global timer_ticks
timer_ticks:.long 0
/*14*/ .section .text
.align 2
.global _start
.global start
.global _vector_table
.extern __start
.extern timer_ticks
/*22*/ .extern __bss_start
.extern _end
/*25*/ start:
_start:
nop
mov.l start_leds,r0
mov.l pio_addr,r1
mov.l r0,@r1
/*32*/ mov.l stack_base,sp
/*34*/ bsr zero_bss
nop
/*37*/ mov.l isr_table,r0
ldc r0,vbr
/*40*/ mov#0,r0
ldc r0,sr
/*43*/ mov.l a_tk_main,r0
jsr @r0
nop
/*48*/ bra _exit
nop
/*51*/ zero_bss:
mov.l bss_strt,r2
mov.l bss_end,r3
mov#0,r4
.L0:
mov.l r4,@-r3
/*58*/ cmp/hi r2,r3
bt .L0
nop
rts
nop
bra _exit
/*65*/ .align 4
bss_strt:.long __bss_start
bss_end:.long _end
stack_base:.long 0x8FFFFFFC
/*71*/ _loop:
bra _loop
nop
/*75*/ _exit:
mov# -1,r0
jsr @r0
nop
/*80*/ _gdb_unhandled_isr:
mov.l start1_leds,r0
mov.l pio_addr,r1
mov.l r0,@r1
bra _exit
nop
/*87*/ _gdb_nmi_isr:
mov.l start2_leds,r0
mov.l pio_addr,r1
mov.l r0,@r1
bra _loop
nop
/*94*/ _gdb_illegalinst_isr:
mov.l start2_leds,r0
mov.l pio_addr,r1
mov.l r0,@r1
bra _exit
nop
/*101*/ _gdb_addresserr_isr:
mov.l start2_leds,r0
mov.l pio_addr,r1
mov.l r0,@r1
bra _exit
nop
/*108*/ _gdb_ihandler_emac:
mov.l start2_leds,r0
mov.l pio_addr,r1
mov.l r0,@r1
bra _loop
nop
/*115*/ _gdb_trapa32_isr:
rte
nop
/*119*/ _gdb_trapa33_isr:
rte
nop
/*123*/ _gdb_trapa34_isr:
rte
nop
/*127*/ _gdb_pit_isr:
mov.l r0,@-sp
mov.l r1,@-sp
mov.l ticks,r0
mov.l @r0,r1
add#1,r1
mov.l r1,@r0
mov.l @sp+,r1
mov.l @sp+,r0
rte
nop
/*139*/ .align 4
ticks:.long timer_ticks
/*142*/ _gdb_ihandler_uart1:
rte
nop
_gdb_ihandler_uart0:
rte
nop
_gdb_ihandler_uart2:
rte
nop
/*152*/ _gdb_ihandler_inttmr:
rte
nop
/*156*/ .align 4
pio_addr:.long 0xABCD0000
start_leds:.long 0x000000ff
start1_leds:.long 0x0000004f
start2_leds:.long 0x0000004e
/*162*/ .long 0x5A5A5A5A
a_tk_main:.long __start
.long 0x5B5B5B5B
isr_table:.long _vector_table
.long 0x5C5C5C5C
/*168*/ .global sleep_0
sleep_0:
sleep
rts
/*174*/ .global __udivsi3_i4i
__udivsi3_i4i:
sts pr,r1
mov.l r4,@-r15
extu.w r5,r0
cmp/eq r5,r0
swap.w r4,r0
shlr16 r4
bf/s udiv_lgdiv
div0u
mov.l r5,@-r15
shll16 r5
sdiv_smdiv:
div1 r5,r4
bsr div6
div1 r5,r4
div1 r5,r4
bsr div6
div1 r5,r4
xtrct r4,r0
xtrct r0,r4
bsr div7
swap.w r4,r4
div1 r5,r4
bsr div7
div1 r5,r4
xtrct r4,r0
mov.l @r15+,r5
swap.w r0,r0
mov.l @r15+,r4
jmp @r1
rotcl r0
div7:
div1 r5,r4
div6:
div1 r5,r4
div1 r5,r4
div1 r5,r4
div1 r5,r4
div1 r5,r4
rts
div1 r5,r4
divx3:
rotcl r0
div1 r5,r4
rotcl r0
div1 r5,r4
rotcl r0
rts
div1 r5,r4
/*225*/ udiv_lgdiv:
mov.l r5,@-r15
sdiv_lgdiv:
xor r4,r0
.rept 4
rotcl r0
bsr divx3
div1 r5,r4
.endr
mov.l @r15+,r5
mov.l @r15+,r4
jmp @r1
rotcl r0
/*239*/ .global __sdivsi3_i4i
.global __sdivsi3_i4
.global __sdivsi3
__sdivsi3_i4i:
__sdivsi3_i4:
__sdivsi3:
mov.l r4,@-r15
cmp/pz r5
mov.l r5,@-r15
bt/s sdiv_pos_divisor
cmp/pz r4
neg r5,r5
extu.w r5,r0
bt/s sdiv_neg_result
cmp/eq r5,r0
neg r4,r4
sdiv_pos_result:
swap.w r4,r0
bra sdiv_chkdiv
sts pr,r1
sdiv_pos_divisor:
extu.w r5,r0
bt/s sdiv_pos_result
cmp/eq r5,r0
neg r4,r4
sdiv_neg_result:
mova sdiv_res_neg,r0
mov r0,r1
swap.w r4,r0
lds r2,macl
sts pr,r2
sdiv_chkdiv:
shlr16 r4
bf/s sdiv_lgdiv
div0u
bra sdiv_smdiv
shll16 r5
.balign 4
sdiv_res_neg:
neg r0,r0
jmp @r2
sts macl,r2
/*282*/ .global __sremsi3
__sremsi3:
sts.l pr,@-r15
mov.l r4,@-r15
mov.l r5,@-r15
bsr __sdivsi3
nop
mov.l @r15+,r5
mov.l @r15+,r4
dmuls.l r0,r5
sts macl,r5
mov r4,r0
sub r5,r0
lds.l @r15+,pr
rts
nop
/*303*/ .global __va_start_1
__va_start_1:
mov.l r5,@(r4,4)
mov.l r6,@(r4,8)
mov.l r7,@(r4,12)
mov.l fr4,@(r4,16)
mov.l fr5,@(r4,20)
mov.l fr6,@(r4,24)
mov.l fr7,@(r4,28)
mov.l fr8,@(r4,32)
mov.l fr9,@(r4,36)
mov.l fr10,@(r4,40)
mov.l fr11,@(r4,44)
/*317*/ mov#4,r0
mov.l r0,@(r4,48)
mov#0,r0
mov.l r0,@(r4,52)
/*322*/ rts
nop
/*325*/ .global __va_arg_i
__va_arg_i:
mov.l @(r4,48),r0
mov#16,r1
cmp/ge r1,r0
bt __va_arg_i.L0
/*332*/ mov.l @(r4,r0),r6
add#4,r0
mov.l r0,@(r4,48)
mov r6,r0
rts
/*338*/ nop
__va_arg_i.L0:
mov.l @(r4,56),r0
mov.l @r0+,r6
mov.l r0,@(r4,56)
mov r6,r0
rts
nop
/*347*/ .global __va_arg_l
__va_arg_l:
mov.l @(r4,48),r0
mov#12,r1
cmp/ge r1,r0
bt __va_arg_l.L0
/*354*/ mov.l @(r4,r0),r6
add#4,r0
mov.l @(r4,r0),r7
add#4,r0
mov.l r0,@(r4,48)
mov r6,r0
mov r7,r1
rts
nop
__va_arg_l.L0:
mov.l @(r4,56),r0
mov.l @r0+,r6
mov.l @r0+,r7
mov.l r0,@(r4,56)
mov r6,r0
mov r7,r1
rts
nop
/*373*/ .global __va_arg_f
__va_arg_f:
mov.l @(r4,52),r0
mov#48,r1
cmp/ge r1,r0
bt __va_arg_f.L0
/*380*/ fmov.s @(r4,r0),fr0
add#4,r0
mov.l r0,@(r4,52)
rts
nop
__va_arg_f.L0:
mov.l @(r4,56),r0
fmov.s @r0+,fr0
mov.l r0,@(r4,56)
rts
nop
/*392*/ .global __va_arg_d
__va_arg_d:
mov.l @(r4,52),r0
/*396*/ add#7,r0
and#0xF8,r0
/*399*/ mov#48,r1
cmp/ge r1,r0
bt __va_arg_d.L0
/*403*/ add r4,r0
fmov.s @r0+,fr0
fmov.s @r0+,fr1
sub r4,r0
mov.l r0,@(r4,52)
rts
nop
__va_arg_d.L0:
mov.l @(r4,56),r0
fmov.s @r0+,fr0
fmov.s @r0+,fr1
mov.l r0,@(r4,56)
rts
nop
/*436*/ .global __movmem_i4_even
.global __movmem_i4_odd
/*439*/ __movmem_i4_even:
mov.l @r5+,r0
bra L_movmem_start_even
mov.l @r5+,r1
/*444*/ __movmem_i4_odd:
mov.l @r5+,r1
add# -4,r4
mov.l @r5+,r2
mov.l @r5+,r3
mov.l r1,@(4,r4)
mov.l r2,@(8,r4)
/*452*/ L_movmem_loop:
mov.l r3,@(12,r4)
dt r6
mov.l @r5+,r0
bt/s L_movmem_2mod4_end
mov.l @r5+,r1
add#16,r4
L_movmem_start_even:
mov.l @r5+,r2
mov.l @r5+,r3
mov.l r0,@r4
dt r6
mov.l r1,@(4,r4)
bf/s L_movmem_loop
mov.l r2,@(8,r4)
rts
mov.l r3,@(12,r4)
/*470*/ L_movmem_2mod4_end:
mov.l r0,@(16,r4)
rts
mov.l r1,@(20,r4)
/*476*/ .global __longj
__longj:
mov r4,r1
mov r5,r2
add#64,r1
/*483*/ mov.l @(0,r1),r0
lds r0,pr
/*486*/ mov.l @(0,r4),r0
mov.l @(4,r4),r1
/*489*/ mov.l @(12,r4),r3
/*491*/ mov.l @(20,r4),r5
mov.l @(24,r4),r6
mov.l @(28,r4),r7
mov.l @(32,r4),r8
mov.l @(36,r4),r9
mov.l @(40,r4),r10
mov.l @(44,r4),r11
mov.l @(48,r4),r12
mov.l @(52,r4),r13
mov.l @(56,r4),r14
mov.l @(60,r4),r15
/*503*/ mov r2,r0
rts
nop
/*507*/ .global __setj
__setj:
mov.l r0,@(0,r4)
mov.l r1,@(4,r4)
mov.l r2,@(8,r4)
mov.l r3,@(12,r4)
mov.l r4,@(16,r4)
mov.l r5,@(20,r4)
mov.l r6,@(24,r4)
mov.l r7,@(28,r4)
mov.l r8,@(32,r4)
mov.l r9,@(36,r4)
mov.l r10,@(40,r4)
mov.l r11,@(44,r4)
mov.l r12,@(48,r4)
mov.l r13,@(52,r4)
mov.l r14,@(56,r4)
mov.l r15,@(60,r4)
/*526*/ mov r4,r1
add#64,r1
/*529*/ sts pr,r0
/*531*/ mov.l r0,@(0,r1)
/*533*/ mov#0,r0
rts
nop
/*776*/ .global __memcpy32_4
.global __memcpy32_8
.global __memcpy32_12
.global __memcpy32_16
.global __memcpy32_20
.global __memcpy32_24
.global __memcpy32_28
.global __memcpy32_32
.global __memcpy32_36
.global __memcpy32_40
.global __memcpy32_44
.global __memcpy32_48
.global __memcpy32_52
.global __memcpy32_56
.global __memcpy32_60
.global __memcpy32_64
/*793*/ .global __memcpy32
/*795*/ __memcpy32_4:
mov.l @r5,r0
mov.l r0,@r4
rts
nop
__memcpy32_8:
mov.l @(r5,0),r0
mov.l @(r5,4),r1
mov.l r0,@(r4,0)
mov.l r1,@(r4,4)
rts
nop
/*808*/ __memcpy32_12:
mov.l @(r5,0),r0
mov.l @(r5,4),r1
mov.l @(r5,8),r2
mov.l r0,@(r4,0)
mov.l r1,@(r4,4)
mov.l r2,@(r4,8)
rts
nop
/*818*/ __memcpy32_16:
mov.l @(r5,0),r0
mov.l @(r5,4),r1
mov.l @(r5,8),r2
mov.l @(r5,12),r3
mov.l r0,@(r4,0)
mov.l r1,@(r4,4)
mov.l r2,@(r4,8)
mov.l r3,@(r4,12)
rts
nop
/*830*/ __memcpy32_20:
mov.l @(r5,0),r0
mov.l @(r5,4),r1
mov.l @(r5,8),r2
mov.l @(r5,12),r3
mov.l r0,@(r4,0)
mov.l r1,@(r4,4)
mov.l r2,@(r4,8)
mov.l r3,@(r4,12)
mov.l @(r5,16),r0
mov.l r0,@(r4,16)
rts
nop
__memcpy32_24:
mov.l @(r5,0),r0
mov.l @(r5,4),r1
mov.l @(r5,8),r2
mov.l @(r5,12),r3
mov.l r0,@(r4,0)
mov.l r1,@(r4,4)
mov.l r2,@(r4,8)
mov.l r3,@(r4,12)
mov.l @(r5,16),r0
mov.l @(r5,20),r1
mov.l r0,@(r4,16)
mov.l r1,@(r4,20)
rts
nop
/*859*/ __memcpy32_28:
mov.l @(r5,0),r0
mov.l @(r5,4),r1
mov.l @(r5,8),r2
mov.l @(r5,12),r3
mov.l r0,@(r4,0)
mov.l r1,@(r4,4)
mov.l r2,@(r4,8)
mov.l r3,@(r4,12)
mov.l @(r5,16),r0
mov.l @(r5,20),r1
mov.l @(r5,24),r2
mov.l r0,@(r4,16)
mov.l r1,@(r4,20)
mov.l r2,@(r4,24)
rts
nop
/*877*/ __memcpy32_32:
mov.l @(r5,0),r0
mov.l @(r5,4),r1
mov.l @(r5,8),r2
mov.l @(r5,12),r3
mov.l r0,@(r4,0)
mov.l r1,@(r4,4)
mov.l r2,@(r4,8)
mov.l r3,@(r4,12)
mov.l @(r5,16),r0
mov.l @(r5,20),r1
mov.l @(r5,24),r2
mov.l @(r5,28),r3
mov.l r0,@(r4,16)
mov.l r1,@(r4,20)
mov.l r2,@(r4,24)
mov.l r3,@(r4,28)
rts
nop
/*897*/ __memcpy32_36:
sts.l pr,@-r15
bsr __memcpy32_16
nop
mov 16,r0
add r0,r4
add r0,r5
bra __memcpy32_20
lds.l @r15+,pr
__memcpy32_40:
sts.l pr,@-r15
bsr __memcpy32_16
nop
mov 16,r0
add r0,r4
add r0,r5
bra __memcpy32_24
lds.l @r15+,pr
__memcpy32_44:
sts.l pr,@-r15
bsr __memcpy32_16
nop
mov 16,r0
add r0,r4
add r0,r5
bra __memcpy32_28
lds.l @r15+,pr
__memcpy32_48:
sts.l pr,@-r15
bsr __memcpy32_16
nop
mov 16,r0
add r0,r4
add r0,r5
bra __memcpy32_32
lds.l @r15+,pr
__memcpy32_52:
sts.l pr,@-r15
bsr __memcpy32_20
nop
mov 20,r0
add r0,r4
add r0,r5
bra __memcpy32_32
lds.l @r15+,pr
__memcpy32_56:
sts.l pr,@-r15
bsr __memcpy32_24
nop
mov 24,r0
add r0,r4
add r0,r5
bra __memcpy32_32
lds.l @r15+,pr
__memcpy32_60:
sts.l pr,@-r15
bsr __memcpy32_28
nop
mov 28,r0
add r0,r4
add r0,r5
bra __memcpy32_32
lds.l @r15+,pr
__memcpy32_64:
sts.l pr,@-r15
bsr __memcpy32_20
nop
mov 32,r0
add r0,r4
add r0,r5
bra __memcpy32_32
lds.l @r15+,pr
/*971*/ __memcpy32:
sts.l pr,@-r15
/*974*/ add r4,r6
/*977*/ mov r6,r7
mov 64,r0
sub r0,r7
cmp/gt r4,r7
__memcpy32.l0_64:
bf __memcpy32.l1_64
bsr __memcpy32_64
mov 64,r0
add r0,r4
add r0,r5
bra __memcpy32.l0_64
cmp/gt r4,r7
__memcpy32.l1_64:
/*992*/ mov r6,r7
mov 16,r0
sub r0,r7
cmp/gt r4,r7
__memcpy32.l0_16:
bf __memcpy32.l1_16
bsr __memcpy32_16
mov 16,r0
add r0,r4
add r0,r5
bra __memcpy32.l0_16
cmp/gt r4,r7
__memcpy32.l1_16:
/*1007*/ mov 16,r1
cmp/gt r4,r6
__memcpy32.l0_4:
bf __memcpy32.l1_4
mov.l @r5,r0
mov.l r0,@r5
add r1,r4
add r1,r5
bra __memcpy32.l0_4
cmp/gt r4,r6
__memcpy32.l1_4:
/*1019*/ lds.l @r15+,pr
rts
nop
/*1064*/ .align 4
_vector_table:
/*1067*/ .long _start
.long 0xFFFC
.long _start
.long 0xFFFC
.long _gdb_illegalinst_isr
.long _gdb_unhandled_isr
.long _gdb_illegalinst_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_addresserr_isr
.long _gdb_addresserr_isr
.long _gdb_nmi_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_pit_isr
.long _gdb_ihandler_emac
.long _gdb_ihandler_uart0
.long _gdb_ihandler_uart2
.long _gdb_unhandled_isr
/*1089*/ .long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_ihandler_uart1
.long _gdb_unhandled_isr
.long _gdb_ihandler_inttmr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
/*1100*/ .long _gdb_unhandled_isr
.long _gdb_trapa32_isr
.long _gdb_trapa33_isr
.long _gdb_trapa34_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
/*1110*/ .long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
/*1121*/ .long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
/*1132*/ .long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
.long _gdb_unhandled_isr
/*1138*/ .section .data
.weak __fpscr_values
.global __fpscr_values
__fpscr_values:
.long 0
.long 0x80000
/*1145*/ .end
