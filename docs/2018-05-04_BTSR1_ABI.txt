BtSR1 General C ABI.

Basic C ABI:
* R0..R7: Scratch
* R8..R14: Callee Preserved
* R15: Stack Pointer
* R0/R1: Return Value
* R2: Struct Return Address
* R4..R7: Register Arguments
** Structures are passed in 1 or 2 registers if they fit.
** Otherwise, structures are passed by reference.
* (Hard FPU) FR0..FR7: Scratch
* (Hard FPU) FR8..FR15: Callee Preserve
* (Hard FPU) FR4..FR7: Float Arguments
** For Soft-FPU, Float and Double arguments will be passed in GPRs.
* DLR: Volatile/Scratch
* DHR: Volatile/Scratch
* GBR: Callee Preserve
** GBR may be used to access memory, and is treated as a callee preserve register.
* TBR: System
** TBR will be a System register, and should not be modified by normal code.
** The use of TBR is outside the scope of the basic C ABI.

If insufficient free registers exist to pass an argument, it and any following arguments of the same class will be passed on the stack. The stack will not have any spill space.

When passing and returning structures by value, the structure will be padded up to a multiple of 4 bytes.

Items on the stack will have a 32-bit alignment, with the size of stack frames for non-leaf functions ideally kept to a 16-byte alignment. The creation of a stack frame is optional for leaf functions.

