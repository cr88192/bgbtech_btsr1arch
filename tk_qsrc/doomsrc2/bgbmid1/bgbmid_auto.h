//base/bm_util.c
BMID_API void *bgbmid_ralloc(int sz);
BMID_API char **bgbmid_split(char *s);
BMID_API char *bgbmid_rstrdup(char *s);
BMID_API char *bgbmid_rgets(char **str);
BMID_API char *bgbmid_strdup(char *s);
BMID_API char *bgbmid_strdup(char *str);
BMID_API void bgbmid_file_init();
BMID_API void *bgbmid_fopen(char *name, char *mode);
BMID_API void bgbmid_fclose(void *fd);
BMID_API int bgbmid_fread(void *buf, int i, int j, void *fd);
BMID_API int bgbmid_fwrite(void *buf, int i, int j, void *fd);
BMID_API void bgbmid_fseek(void *buf, int i, int j);
BMID_API int bgbmid_fgetc(void *fd);
BMID_API int bgbmid_fputc(int i, void *fd);
BMID_API int bgbmid_ftell(void *fd);
BMID_API int bgbmid_feof(void *fd);
BMID_API int bgbmid_fgets(void *buf, int sz, void *fd);
BMID_API void bgbmid_set_fopen(void *fcn);
BMID_API void bgbmid_set_fclose(void *fcn);
BMID_API void bgbmid_set_fread(void *fcn);
BMID_API void bgbmid_set_fwrite(void *fcn);
BMID_API void bgbmid_set_fseek(void *fcn);
BMID_API void bgbmid_set_fgetc(void *fcn);
BMID_API void bgbmid_set_fputc(void *fcn);
BMID_API void bgbmid_set_ftell(void *fcn);
BMID_API void bgbmid_set_feof(void *fcn);
BMID_API void bgbmid_set_fgets(void *fcn);
//base/bm_wave.c
BMID_API int BGBMID_ScaleSample(short *d, int dl, short *s, int sl);
BMID_API byte *BGBMID_LoadWAV(char *name,int *rch, int *rr, int *rbits, int *rlen);
BMID_API void BGBMID_StoreWAV(char *name, byte *buf, int ch, int rt, int bits, int len);
BMID_API short *BGBMID_LoadWAV16(char *name,int *rch, int *rrt, int *rlen);
BMID_API short *BGBMID_LoadWAV_Mono16(char *name, int *rrt, int *rlen);
BMID_API short *BGBMID_LoadWAV_44Mono16(char *name, int *rlen);
BMID_API short *BGBMID_LoadWAV_16Mono16(char *name, int *rlen);
BMID_API short *BGBMID_LoadWAV_8Mono16(char *name, int *rlen);
BMID_API short *BGBMID_LoadWAV_Stereo16(char *name, int *rrt, int *rlen);
BMID_API short *BGBMID_LoadWAV_44Stereo16(char *name, int *rlen);
BMID_API int BGBMID_NormalizeSample(short *dst, short *src, int len);
BMID_API double BGBMID_SplinePolate(short *samp, int len, double t);
BMID_API double BGBMID_SplinePolateF(float *samp, int len, double t);
BMID_API int BGBMID_ScaleSampleTrilinear(short *d, int dl, short *s, int sl);
BMID_API double BGBMID_Sinc(double x);
BMID_API double BGBMID_SincPolate(short *samp, int len, double f, int n);
BMID_API int BGBMID_ScaleSampleSinc(short *d, int dl, short *s, int sl);
BMID_API double BGBMID_SplinePolate(short *samp, int len, double t);
BMID_API double BGBMID_SplinePolateF(float *samp, int len, double t);
BMID_API double BGBMID_SplinePolateLoop(short *samp, int len, double t);
BMID_API int BGBMID_ScaleSampleSpline(short *d, int dl, short *s, int sl);
BMID_API int BGBMID_ScaleSample(short *d, int dl, short *s, int sl);
BMID_API int BGBMID_ScaleSampleHQ(short *d, int dl, short *s, int sl);
BMID_API int BGBMID_SampleCompressor(short *db, int dl, short *sb, int sl,int ivl, int isl, int irl);
BMID_API int BGBMID_Wave_UpdateHistogram(float *hist, float val, float lval);
BMID_API int BGBMID_Wave_GenerateHistogram(float *hist, short *sb, int sl);
//base/bm_patch.c
BMID_API BGBMID_Patch *BGBMID_LookupPatch(char *name);
BMID_API void BGBMID_UnlinkPatch(BGBMID_Patch *pat);
BMID_API char *BGBMID_MidiPatchName(int idx);
BMID_API char *BGBMID_MidiDrumPatchName(int idx);
BMID_API char **BGBMID_FetchPatchBank(int bank);
BMID_API char **BGBMID_GetPatchBank(int bank);
BMID_API char *BGBMID_GetPatchName2(int bank, int idx);
BMID_API int BGBMID_SetPatchName2(int bank, int idx, char *name);
BMID_API char *BGBMID_GetPatchName(int idx);
BMID_API int BGBMID_SetPatchName(int idx, char *name);
BMID_API int BGBMID_AllocPatchName(int minidx, int maxidx, char *name);
BMID_API int BGBMID_LookupIndexPatchName(int minidx, int maxidx, char *name);
BMID_API int BGBMID_BufferRebuildMip(short *bp, int chan, int len);
BMID_API int BGBMID_SampleRebuildMip(BGBMID_Sample *samp);
BMID_API int BGBMID_ReadS16LE(void *fd);
BMID_API int BGBMID_ReadS32LE(void *fd);
BMID_API void BGBMID_WriteS16LE(void *fd, int v);
BMID_API void BGBMID_WriteS32LE(void *fd, int v);
BMID_API BGBMID_Patch *BGBMID_LoadPatchGUS(char *name);
BMID_API int BGBMID_TestPatchFilt(char *name, BGBMID_Patch *pat);
BMID_API int BGBMID_WaveBaseFreqIdx(short *bp, int len);
BMID_API float BGBMID_WaveBaseFreq(short *bp, int rate, int len);
BMID_API BGBMID_Patch *BGBMID_LoadPatchRawWav(char *name);
BMID_API BGBMID_Patch *BGBMID_LoadPatchWav(char *name);
BMID_API int BGBMID_StorePatchWav(char *name, BGBMID_Patch *pat);
BMID_API BGBMID_Patch *BGBMID_LoadPatchDummy(char *name);
BMID_API BGBMID_Patch *BGBMID_CreatePatchStream(char *name, int rate, int len);
BMID_API BGBMID_Patch *BGBMID_CreatePatchSamples(char *name, short *buf, int rate, int len);
BMID_API BGBMID_Patch *BGBMID_LoadPatchPakBTAC(char *name);
BMID_API int BGBMID_DumpPatches();
BMID_API BGBMID_Patch *BGBMID_LoadPatch(char *name, int idx);
//base/bm_synth.c
BMID_API void BGBMID_InitMidiChannel(BGBMID_Context *ctx, int num);
BMID_API void BGBMID_InitChannel(BGBMID_Context *ctx, int num);
BMID_API int BGBMID_InitChannels(BGBMID_Context *ctx);
BMID_API void BGBMID_CheckInitMidiChannel(BGBMID_Context *ctx, int num);
BMID_API void BGBMID_CheckInitChannel(BGBMID_Context *ctx, int num);
BMID_API void BGBMID_DeleteChannel(BGBMID_Context *ctx, int num);
BMID_API int BGBMID_FindFreeChannel(BGBMID_Context *ctx);
BMID_API int BGBMID_AllocChannel(BGBMID_Context *ctx);
BMID_API int BGBMID_BlendNoteTone(BGBMID_Context *ctx,int chan, int len, int note);
BMID_API int BGBMID_BlendNoteSampLoop(BGBMID_Context *ctx,int chan, int len, int note, BGBMID_Sample *samp, float freq);
BMID_API int BGBMID_BlendNoteSampNoLoop(BGBMID_Context *ctx,int chan, int len, int note, BGBMID_Sample *samp, float freq);
BMID_API int BGBMID_BlendNote(BGBMID_Context *ctx,int chan, int len, int note);
BMID_API int BGBMID_BlendNoteDrum(BGBMID_Context *ctx,int chan, int len, int note);
BMID_API int BGBMID_BlendChannel(BGBMID_Context *ctx, int chan, int samp);
BMID_API int BGBMID_StopChannel(BGBMID_Context *ctx, int chan);
BMID_API void BGBMID_DeltaDeblock(BGBMID_Context *ctx, int step);
BMID_API void BGBMID_DeltaDeblock2(BGBMID_Context *ctx, int step);
BMID_API void BGBMID_DeltaReverb(BGBMID_Context *ctx, int step);
BMID_API int BGBMID_DeltaTime(BGBMID_Context *ctx, int step);
BMID_API int BGBMID_NoteOn(BGBMID_Context *ctx,int chan, int note, int vel);
BMID_API int BGBMID_NoteOff(BGBMID_Context *ctx,int chan, int note, int vel);
BMID_API int BGBMID_NoteAftertouch(BGBMID_Context *ctx,int chan, int note, int val);
BMID_API int BGBMID_Controller(BGBMID_Context *ctx,int chan, int num, int val);
BMID_API int BGBMID_ProgramChange(BGBMID_Context *ctx, int chan, int num);
BMID_API int BGBMID_ProgramChange2(BGBMID_Context *ctx, int chan, int num);
BMID_API int BGBMID_ChannelAftertouch(BGBMID_Context *ctx,int chan, int val);
BMID_API int BGBMID_PitchBlend(BGBMID_Context *ctx, int chan, int val);
BMID_API int BGBMID_ProgramDefinePatch(BGBMID_Context *ctx, int num, char *name);
BMID_API int BGBMID_PlayMixSample(BGBMID_Context *ctx, int chan, int num);
BMID_API int BGBMID_ChannelMapValidate(BGBMID_Context *ctx, int chan);
BMID_API void BGBMID_Controller2fv(BGBMID_Context *ctx,int chan, int num, float *val);
BMID_API void BGBMID_Controller3fv(BGBMID_Context *ctx,int chan, int num, float *val);
BMID_API void BGBMID_Controller4fv(BGBMID_Context *ctx,int chan, int num, float *val);
BMID_API void BGBMID_Controller1f(BGBMID_Context *ctx,int chan, int num, float val);
BMID_API void BGBMID_Controller2f(BGBMID_Context *ctx,int chan, int num, float x, float y);
BMID_API void BGBMID_Controller3f(BGBMID_Context *ctx,int chan, int num, float x, float y, float z);
BMID_API void BGBMID_Controller4f(BGBMID_Context *ctx,int chan, int num, float x, float y, float z, float w);
BMID_API void BGBMID_Controller1i(BGBMID_Context *ctx,int chan, int num, int val);
BMID_API void BGBMID_Controller2i(BGBMID_Context *ctx,int chan, int num, int x, int y);
BMID_API void BGBMID_Controller3i(BGBMID_Context *ctx,int chan, int num, int x, int y, int z);
BMID_API void BGBMID_Controller4i(BGBMID_Context *ctx,int chan, int num, int x, int y, int z, int w);
BMID_API void BGBMID_GetChannelVectorNfv(BGBMID_Context *ctx,int chan, int num, float *val, int sz);
BMID_API void BGBMID_GetProgramVectorNfv(BGBMID_Context *ctx,int prg, int num, float *val, int sz);
BMID_API int BGBMID_SynthStep(BGBMID_Context *ctx);
BMID_API int BGBMID_DoSynth(BGBMID_Context *ctx);
BMID_API int BGBMID_SynthSamples(BGBMID_Context *ctx, short *buf, int len);
BMID_API int BGBMID_SynthSamples2(BGBMID_Context *ctx, short *buf, int len, int ovlen);
//base/bm_stream.c
BMID_API int BGBMID_UpdateStreams(BGBMID_Context *ctx, int samp);
//base/bm_mix.c
BMID_API void BGBMID_Sound_MixPopReduceStereo(short *buffer, int cnt);
BMID_API void BGBMID_Sound_MixPopReduceStereo2(short *buffer, int size, int offs, int cnt);
float BGBMID_Sound_CalcDoppler(float *lorg, float *lvel, float *sorg, float *svel);
BMID_API float BGBMID_Sound_CalcChanAttenuation(BGBMID_Context *ctx, BGBMID_Channel *chan);
BMID_API BGBMID_AttParams BGBMID_Sound_CalcChanAttParms(BGBMID_Context *ctx, BGBMID_Channel *chan, int samp);
int bgbmid_ringmod(int sb, int sl, int v);
int bgbmid_mod(int x, int y);
int bgbmid_log2up(int x);
int bgbmid_log2dn(int x);
BMID_API int BGBMID_Sample_NearestPosition(BGBMID_Context *ctx, BGBMID_Sample *samp, int base, int depth, int chan);
float BGBMID_LerpValsF(float a, float b, float t);
float BGBMID_SplinePolateValsF(float a, float b, float c, float d, float t);
BMID_API vec2 BGBMID_Sample_InterpolatedSamplePosition(BGBMID_Context *ctx, BGBMID_Sample *samp, double base, double depth);
BMID_API vec2 BGBMID_Sample_InterpolatedSampleSubPosition(BGBMID_Context *ctx, BGBMID_Sample *samp, double base, double depth, int sbase, int slen);
BMID_API vec2 BGBMID_Sample_InterpolatedPosition(BGBMID_Context *ctx, BGBMID_Sample *samp, double base, double depth);
BMID_API vec2 BGBMID_Sample_InterpolatedSubPosition(BGBMID_Context *ctx, BGBMID_Sample *samp, double base, double depth, int sbase, int slen);
BMID_API void BGBMID_BlendMixChannelReverb(BGBMID_Context *ctx, BGBMID_Channel *chan, BGBMID_ListenerChannel *lchan, int samp);
BMID_API int BGBMID_BlendMixChannel(BGBMID_Context *ctx, BGBMID_Channel *chan, int samp);
BMID_API int BGBMID_DestroyMixChannel(BGBMID_Context *ctx, BGBMID_Channel *chan);
BMID_API int BGBMID_InitMixChannel(BGBMID_Context *ctx, BGBMID_Channel *chan, BGBMID_Sample *samp);
BMID_API BGBMID_ListenerChannel *BGBMID_GetListenerChannel(BGBMID_Context *ctx, BGBMID_Channel *chan);
BMID_API void BGBMID_SetReverbDefault(BGBMID_Context *ctx);
BMID_API void BGBMID_SetReverbBaseEffect(BGBMID_Context *ctx, float base, float effect);
BMID_API void BGBMID_SetFilterEffect(BGBMID_Context *ctx, float base, float effect);
BMID_API void BGBMID_SetupReverbSinc(BGBMID_Context *ctx, float sc);
BMID_API void BGBMID_SetupReverbCosc(BGBMID_Context *ctx, float sc);
BMID_API void BGBMID_SetupReverbSin(BGBMID_Context *ctx, float sc);
BMID_API void BGBMID_SetupReverbCos(BGBMID_Context *ctx, float sc);
BMID_API void BGBMID_SetupFilterCos(BGBMID_Context *ctx, float sc);
BMID_API void BGBMID_SetupFilterCosc(BGBMID_Context *ctx, float sc);
BMID_API void BGBMID_SetupFilterFalloff(BGBMID_Context *ctx, float sc);
//base/bm_voxenv.c
BMID_API void BGBMID_VoxEnv_RegisterGetWorldFineVoxel(BGBMID_EnvVoxel (*fcn)(BGBMID_Context *ctx, int x, int y, int z, int flags));
BMID_API void BGBMID_VoxEnv_RegisterGetWorldCoarseVoxel(BGBMID_EnvVoxel (*fcn)(BGBMID_Context *ctx, int x, int y, int z, int flags));
BMID_API BGBMID_EnvVoxel BGBMID_VoxEnv_GetWorldFineVoxel(BGBMID_Context *ctx, int x, int y, int z, int flags);
BMID_API BGBMID_EnvVoxel BGBMID_VoxEnv_GetWorldCoarseVoxel(BGBMID_Context *ctx, int x, int y, int z, int flags);
BMID_API int BGBMID_VoxEnv_VoxelPassSound(BGBMID_Context *ctx,BGBMID_EnvVoxel vox);
BMID_API int BGBMID_VoxEnv_VoxelDelaySound(BGBMID_Context *ctx,BGBMID_EnvVoxel vox);
BMID_API BGBMID_EnvVoxel BGBMID_VoxEnv_VoxelPropagateSound(BGBMID_Context *ctx, BGBMID_EnvVoxel vox, BGBMID_EnvVoxel vox1);
BMID_API void BGBMID_VoxEnv_PropagateValuesX(BGBMID_Context *ctx,BGBMID_EnvFilter *env, BGBMID_EnvVoxel *voxarr, int flags);
BMID_API void BGBMID_VoxEnv_PropagateValuesY(BGBMID_Context *ctx,BGBMID_EnvFilter *env, BGBMID_EnvVoxel *voxarr, int flags);
BMID_API void BGBMID_VoxEnv_PropagateValuesZ(BGBMID_Context *ctx,BGBMID_EnvFilter *env, BGBMID_EnvVoxel *voxarr, int flags);
BMID_API void BGBMID_VoxEnv_PropagateValues(BGBMID_Context *ctx,BGBMID_EnvFilter *env, BGBMID_EnvVoxel *voxarr, int flags);
BMID_API void BGBMID_VoxEnv_AddModelVoxel(BGBMID_Context *ctx,BGBMID_EnvFilter *env, BGBMID_EnvVoxel vox, vec3 lorg, vec3 org, float scale, int flags);
BMID_API int BGBMID_VoxEnv_ModelPoint(BGBMID_Context *ctx,BGBMID_EnvFilter *env, vec3 org, int flags);
BMID_API int BGBMID_VoxEnv_UpdateModelListener(BGBMID_Context *ctx, int flags);
BMID_API int BGBMID_VoxEnv_NormalizeEnvReverb(BGBMID_Context *ctx, BGBMID_EnvFilter *env);
BMID_API int BGBMID_VoxEnv_NormalizeEnvEffect(BGBMID_Context *ctx, BGBMID_EnvFilter *env);
//base/bm_file.c
BMID_API int BGBMID_ReadS16BE(void *fd);
BMID_API int BGBMID_ReadS32BE(void *fd);
BMID_API void BGBMID_WriteS16BE(void *fd, int v);
BMID_API void BGBMID_WriteS32BE(void *fd, int v);
BMID_API int BGBMID_ReadDelta(void *fd);
BMID_API int BGBMID_DumpMidi0(char *name, byte *strm, int sz, int nticks);
BMID_API int BGBMID_DumpMidi1(char *name, byte **strm, int *sz, int ntrk, int nticks);
BMID_API int BGBMID_ReadMidi(char *name, byte **strm, int *sz, int *rntrk, int *rnticks);
BMID_API int BGBMID_DecVLI(byte **rcs);
BMID_API int BGBMID_EncVLI(byte **rct, int val);
BMID_API int BGBMID_TryDecVLI(byte **rcs, byte *ce);
BMID_API int BGBMID_TryDecSVLI(byte **rcs, byte *ce);
BMID_API int BGBMID_ReadMidiMerge(char *name, byte **rstrm, int *rsz, int *rnticks);
BMID_API int BGBMID_Midi2Ascii(char *buf, byte *strm, int sz, int nticks);
int bgbmid_readnum(char **str);
BMID_API int BGBMID_Ascii2Midi(byte *buf,char *strm, int *rsz, int *rnticks);
//base/bm_api.c
int BGBMID_WriteStereoSamples2(BGBMID_Context *ctx,short *buffer, int cnt, int ovcnt);
BMID_API int BGBMID_RegisterWriteStereoSamples2(int (*fcn)(short *buffer, int cnt, int ovcnt));
BMID_API void *bgbmid_malloc(int size);
BMID_API void *bgbmid_tyalloc(char *ty, int size);
BMID_API void *bgbmid_tyatomic(char *ty, int size);
BMID_API void bgbmid_free(void *buf);
BMID_API void *bgbmid_realloc(void *buf, int size);
BMID_API int BGBMID_LoadPackGlobal(char *name);
BMID_API int BGBMID_BindListener(BGBMID_Context *ctx, int id);
BMID_API int BGBMID_SetInputBuffer(BGBMID_Context *ctx, byte *buf, int sz);
BMID_API int BGBMID_SynthStream(BGBMID_Context *ctx, byte *buf, int sz);
BMID_API int BGBMID_SetOutputBuffer(BGBMID_Context *ctx, short *buf, int len);
BMID_API short *BGBMID_GetOutputBuffer(BGBMID_Context *ctx);
BMID_API int BGBMID_GetOutputBufferPos(BGBMID_Context *ctx);
BMID_API int BGBMID_GetOutputBufferSize(BGBMID_Context *ctx);
BMID_API int BGBMID_GetOutputSampleRate(BGBMID_Context *ctx);
BMID_API int BGBMID_SetOutputSampleRate(BGBMID_Context *ctx, int rate);
BMID_API int BGBMID_SetNoteTicks(BGBMID_Context *ctx, int ticks);
BMID_API int BGBMID_SetNoteLen(BGBMID_Context *ctx, float sec);
BMID_API int BGBMID_SetRateScale(BGBMID_Context *ctx, float scale);
BMID_API int BGBMID_SetFreqScale(BGBMID_Context *ctx, float scale);
BMID_API BGBMID_Context *BGBMID_NewContext();
BMID_API int BGBMID_DestroyContext(BGBMID_Context *ctx);
BMID_API int BGBMID_PlayMixTime(BGBMID_Context *ctx, double dt);
BMID_API int BGBMID_LookupSampleName(BGBMID_Context *ctx, char *name);
BMID_API int BGBMID_PlaySampleName(BGBMID_Context *ctx, char *name);
BMID_API int BGBMID_ChannelStillPlayingP(BGBMID_Context *ctx, int id);
BMID_API int BGBMID_SetListenerOrigin(BGBMID_Context *ctx,int id, float *org);
BMID_API int BGBMID_SetListenerVelocity(BGBMID_Context *ctx,int id, float *vel);
BMID_API int BGBMID_SetListenerRotation(BGBMID_Context *ctx,int id, float *rot);
BMID_API int BGBMID_SetListenerRotationQuat(BGBMID_Context *ctx,int id, float *rot);
BMID_API int BGBMID_CreateStreamName(BGBMID_Context *ctx,char *name, int rate, int len);
BMID_API int BGBMID_WriteStreamSamples(BGBMID_Context *ctx, int num, short *pcm, int len);
BMID_API int BGBMID_CreateProgramSpeak(BGBMID_Context *ctx, char *voice, char *text);
BMID_API int BGBMID_RecordMixTime(BGBMID_Context *ctx, double dt);
//base/bm_codec.c
BMID_API BGBMID_AudioCodecCtx *BGBMID_Codec_OpenMP3(int chan, int rate, int bits);
BMID_API int BGBMID_Codec_DecodeMP3(BGBMID_AudioCodecCtx *ctx,byte *ibuf, int ibsz, short *obuf, int obsz, int *rlen);
BMID_API BGBMID_AudioCodecCtx *BGBMID_Codec_Open(u32 fcc,int chan, int rate, int bits);
BMID_API int BGBMID_Codec_Decode(BGBMID_AudioCodecCtx *ctx,byte *ibuf, int ibsz, short *obuf, int obsz, int *rlen);
//base/bmac_adpcm.c
BMID_API void BGBMID_MsImaAdpcm_DecodeBlockMono(byte *ibuf, s16 *obuf, int len);
BMID_API void BGBMID_MsImaAdpcm_DecodeBlockMonoAsStereo(byte *ibuf, s16 *obuf, int len);
BMID_API void BGBMID_MsImaAdpcm_EncodeBlockMono(s16 *ibuf, byte *obuf, int len);
BMID_API void BGBMID_MsImaAdpcm_DecodeBlockStereo(byte *ibuf, s16 *obuf, int len);
BMID_API void BGBMID_MsImaAdpcm_EncodeBlockStereo(s16 *ibuf, byte *obuf, int len);
BMID_API int BGBMID_MsImaAdpcm_MonoSamplesFromBlockSize(int sz);
BMID_API int BGBMID_MsImaAdpcm_MonoBlockSizeFromSamples(int len);
BMID_API int BGBMID_MsImaAdpcm_StereoSamplesFromBlockSize(int sz);
BMID_API int BGBMID_MsImaAdpcm_StereoBlockSizeFromSamples(int len);
//base/snd_stub.c
BMID_API int BGBMID_SoundDev_DeInit();
BMID_API int BGBMID_SoundDev_Init();
BMID_API int BGBMID_SoundDev_GetDMAPos();
BMID_API void BGBMID_SoundDev_Submit();
BMID_API int BGBMID_SoundDev_PaintSamples(short *buffer, int cnt);
BMID_API int BGBMID_SoundDev_WriteRawSamples(short *buffer, int cnt, int ovcnt);
BMID_API int BGBMID_SoundDev_WriteStereoSamples(short *buffer, int cnt);
BMID_API int BGBMID_SoundDev_WriteStereoSamples2(short *buffer, int cnt, int ovcnt);
BMID_API int BGBMID_SoundDev_WriteSamples(short *buffer, int cnt);
BMID_API int BGBMID_SoundDev_RecInit();
BMID_API int BGBMID_SoundDev_RecDeInit();
BMID_API int BGBMID_SoundDev_RecReadStereoSamples(short *buffer, int cnt);
BMID_API int BGBMID_SoundDev_RecReadStereoSamples2(short *buffer, int cnt, int ovcnt);
//base/snd_win2.c
BMID_API int BGBMID_SoundDev_DeInit();
BMID_API int BGBMID_SoundDev_Init();
BMID_API int BGBMID_SoundDev_GetDMAPos();
BMID_API void BGBMID_SoundDev_Submit();
BMID_API int BGBMID_SoundDev_PaintSamples(short *buffer, int cnt);
BMID_API int BGBMID_SoundDev_WriteRawSamples(short *buffer,int cnt, int ovcnt);
BMID_API int BGBMID_SoundDev_WriteStereoSamples(short *buffer, int cnt);
BMID_API int BGBMID_SoundDev_WriteStereoSamples2(short *buffer, int cnt, int ovcnt);
BMID_API int BGBMID_SoundDev_WriteSamples(short *buffer, int cnt);
//base/sys_generic.c
BMID_API int BGBMID_TimeMS();
BMID_API s64 BGBMID_TimeUS();
//base/bm_rec_stt.c
float bgbmid_fastcos(float ang);
int BGBMID_TransformSamplesToMatchBlock(int *hist, short *buf, int len, int ovlen);
int BGBMID_TransformMatchBlockToSamples(int *hist, short *buf, int len, int ovlen);
BMID_API int BGBMID_RecordHandleSamples(BGBMID_Context *ctx, short *buf, int len, int ovlen);
BMID_API int BGBMID_GetRecordFreqBlock(BGBMID_Context *ctx, int *hist, int szHist);
BMID_API int BGBMID_GetPriorRecordFreqBlock(BGBMID_Context *ctx, int idx, int *hist, int szHist);
//base/snd_rec_win.c
BMID_API int BGBMID_SoundDev_RecDeInit();
BMID_API int BGBMID_SoundDev_RecInit();
BMID_API int BGBMID_SoundDev_GetRecDMAPos();
BMID_API void BGBMID_SoundDev_RecSubmit();
BMID_API int BGBMID_SoundDev_RecCopySamples(short *buffer, int cnt);
BMID_API int BGBMID_SoundDev_RecReadRawSamples(short *buffer,int cnt, int ovcnt);
BMID_API int BGBMID_SoundDev_RecReadStereoSamples(short *buffer, int cnt);
BMID_API int BGBMID_SoundDev_RecReadStereoSamples2(short *buffer, int cnt, int ovcnt);
BMID_API int BGBMID_SoundDev_PaintSamples(short *buffer, int cnt);
BMID_API int BGBMID_SoundDev_WriteRawSamples(short *buffer,int cnt, int ovcnt);
BMID_API int BGBMID_SoundDev_WriteStereoSamples(short *buffer, int cnt);
BMID_API int BGBMID_SoundDev_WriteStereoSamples2(short *buffer, int cnt, int ovcnt);
BMID_API int BGBMID_SoundDev_WriteSamples(short *buffer, int cnt);
//base/bmsr/bmsr_match.c
BGBMID_BMSR_Context *BGBMID_BMSR_AllocContext();
double BGBMID_BMSR_MatchCompareBlock(int *dct1, int *dct2, int blksz);
int BGBMID_BMSR_MatchCompareSample(BGBMID_BMSR_Context *ctx, BGBMID_BMSR_Sample *samp);
BGBMID_BMSR_Sample *BGBMID_BMSR_LookupMatch(BGBMID_BMSR_Context *ctx);
char *BGBMID_BMSR_LookupMatchWord(BGBMID_BMSR_Context *ctx);
BGBMID_BMSR_Sample *BGBMID_BMSR_LookupWordPatch(BGBMID_BMSR_Context *ctx, char *word);
BGBMID_BMSR_Sample *BGBMID_BMSR_GetWordPatch(BGBMID_BMSR_Context *ctx, char *word);
int BGBMID_BMSR_LoadWordPatch(BGBMID_BMSR_Context *ctx,char *word, char *patch);
int BGBMID_BMSR_LoadProfile(BGBMID_BMSR_Context *ctx, char *lst);
//base/bm_btac_filter3.c
int bgbmid_ssqrti(int v);
int bgbmid_ssqri(int v);
int bgbmid_spowi(int v, float e);
double bgbmid_ssqrt(double v);
double bgbmid_ssqr(double v);
int bgbmid_clampi(int v, int m, int n);
void BGBMID_BTAC_Encode64BlockHeaderS16(s16 *iblk, byte *oblk, s16 *tcblk, int *rcm, int *rcn, int flags);
void BGBMID_BTAC_Encode64BlockHeaderS16(s16 *iblk, byte *oblk, s16 *tcblk, int *rcm, int *rcn, int flags);
void BGBMID_BTAC_Encode64BlockHeaderPanS16(s16 *iblk, byte *oblk, s16 *tcblk, s16 *tcpan, int *rcm, int *rcn, int *rlm, int *rln, int *rrm, int *rrn, int flags);
void BGBMID_BTAC_Encode64BlockHeaderSideS16(s16 *iblk, byte *oblk, s16 *tcblk, s16 *tcpan, int *rcm, int *rcn, int *rsm, int *rsn, int flags);
void BGBMID_BTAC_Decode64BlockHeader(byte *iblk, int flags,int *rcm, int *rcn, int *rca, int *rlm, int *rln, int *rla, int *rrm, int *rrn, int *rra);
void BGBMID_BTAC_Decode64BlockSideHeader(byte *iblk, int flags,int *rcm, int *rcn, int *rca, int *rsm, int *rsn, int *rsa);
void BGBMID_BTAC_Encode64Block8S16(s16 *iblk, byte *oblk, int flags);
void BGBMID_BTAC_Decode64Block8S16(byte *iblk, s16 *oblk, int flags);
void BGBMID_BTAC_Encode64Block9S16(s16 *iblk, byte *oblk, int flags);
void BGBMID_BTAC_Decode64Block9S16(byte *iblk, s16 *oblk, int flags);
void BGBMID_BTAC_Encode64Block10S16(s16 *iblk, byte *oblk, int flags);
void BGBMID_BTAC_Decode64Block10S16(byte *iblk, s16 *oblk, int flags);
void BGBMID_BTAC_Encode64Block12S16(s16 *iblk, byte *oblk, int flags);
void BGBMID_BTAC_Decode64Block12S16(byte *iblk, s16 *oblk, int flags);
void BGBMID_BTAC_Encode64Block13S16(s16 *iblk, byte *oblk, int flags);
void BGBMID_BTAC_Decode64Block13S16(byte *iblk, s16 *oblk, int flags);
void BGBMID_BTAC_Encode64Block11S16(s16 *iblk, byte *oblk, int flags);
void BGBMID_BTAC_Decode64Block11S16(byte *iblk, s16 *oblk, int flags);
void BGBMID_BTAC_Encode64Block14S16(s16 *iblk, byte *oblk, int flags);
void BGBMID_BTAC_Decode64Block14S16(byte *iblk, s16 *oblk, int flags);
BMID_API void BGBMID_BTAC_FilterStreamMonoS16(s16 *buf, int len);
BMID_API void BGBMID_BTAC_DeblockStreamMonoS16(s16 *oblk, int len);
BMID_API void BGBMID_BTAC_FilterStreamS16(s16 *buf, int len);
BMID_API void BGBMID_BTAC_DeblockStreamS16(s16 *oblk, int len);
void BGBMID_BTAC_Encode64BlockTagS16(s16 *iblk, byte *oblk,int tag, int flags);
void BGBMID_BTAC_Decode64BlockTagS16(byte *iblk, s16 *oblk, int flags);
void BGBMID_BTAC_CompandBlockS16(s16 *iblk, s16 *oblk, int flags);
void BGBMID_BTAC_UnCompandBlockS16(s16 *iblk, s16 *oblk, int flags);
BMID_API int BGBMID_BTAC_Calc64BlockErrorS16(s16 *iblk, s16 *tblk, int flags);
BMID_API int BGBMID_BTAC_Check64BlockBestS16(s16 *iblk, int flags);
void BGBMID_BTAC_Encode64BlockBestTagS16(s16 *iblk, byte *oblk, int flags);
BMID_API void BGBMID_BTAC_Encode64StreamS16(s16 *iblk, byte *oblk, int len, int flags);
BMID_API void BGBMID_BTAC_Decode64StreamS16(byte *iblk, s16 *oblk, int len, int flags);
void BGBMID_BTAC_DecodeBlockTagS16(byte *iblk, s16 *oblk, int flags);
void BGBMID_BTAC_DecodeBlockTagS16DB(byte *iblk, s16 *oblk, int flags);
BMID_API void BGBMID_BTAC_EncodeStreamS16(s16 *iblk, byte *oblk, int len, int flags);
BMID_API void BGBMID_BTAC_DecodeStreamS16(byte *iblk, s16 *oblk, int len, int flags);
//base/bm_btac_filter4.c
void BGBMID_BTAC_Encode64BlockHeaderSide2S16(s16 *iblk, byte *oblk, s16 *tcblk, s16 *tcpan, int *rcm, int *rcn, int *rsm, int *rsn, int flags);
void BGBMID_BTAC_Encode64Block15S16(s16 *iblk, byte *oblk, int flags);
void BGBMID_BTAC_Decode64Block15S16(byte *iblk, s16 *oblk, int flags);
void BGBMID_BTAC_Upsample256BlockS16(s16 *iblk, s16 *oblk, int flags);
void BGBMID_BTAC_AddResiduals256BlockS16(s16 *iblk, s16 *trblk, s16 *oblk, int flags);
void BGBMID_BTAC_Decode256Block0S16(byte *iblk, s16 *oblk, int flags);
void BGBMID_BTAC_Decode256BlockTagS16(byte *iblk, s16 *oblk, int flags);
BMID_API int BGBMID_BTAC_BlockSize256Flags(int flags);
BMID_API void BGBMID_BTAC_Decode256StreamS16(byte *iblk, s16 *oblk, int len, int flags);
void BGBMID_BTAC_Encode256LQBlock0S16(s16 *iblk, byte *oblk, int flags);
void BGBMID_BTAC_Encode256HQBlock0S16(s16 *iblk, byte *oblk, int flags);
void BGBMID_BTAC_Encode256Block0S16(s16 *iblk, byte *oblk, int flags);
void BGBMID_BTAC_Encode256BlockTagS16(s16 *iblk, byte *oblk,int tag, int flags);
BMID_API int BGBMID_BTAC_Calc256BlockErrorS16(s16 *iblk, s16 *tblk, int flags);
BMID_API int BGBMID_BTAC_Check256BlockBestS16(s16 *iblk, int flags);
void BGBMID_BTAC_Encode256BlockBestTagS16(s16 *iblk, byte *oblk, int flags);
BMID_API void BGBMID_BTAC_Encode256StreamS16(s16 *iblk, byte *oblk, int len, int flags);
//base/bm_btac_filter5.c
void BGBMID_BTAC_Band0WHT64(int *iblk, int *oblk, int dc);
void BTAC_Band0_WriteNBits(void *ctx, int v, int n);
void BTAC_Band0_EncodeSymbol(void *ctx, int tab, int v);
int BTAC_Band0_BalanceTree_r(short *nodes, short *nlen,int root, int h, int ml);
void BTAC_Band0_CalcLengths_r(short *nodes, byte *cl, int root, int h);
int BTAC_Band0_BuildLengths(int *stat, int nc, byte *cl, int ml);
void BTAC_Band0_EncodeCoeffUValue(void *ctx,int tab, int z, u32 val);
void BTAC_Band0_StatCoeffUValue(void *ctx,int *stat, int z, u32 val);
void BTAC_Band0_EncodeBlock(void *ctx,int *buf, int dctab, int actab);
void BTAC_Band0_StatVal(void *ctx, int *stat, int z, int v);
void BTAC_Band0_StatBlock(void *ctx,int *buf, int *dcstat, int *acstat);
void BGBMID_BTAC_Encode64BlockBand0(s16 *iblk, byte *oblk,int tag, int flags);
BMID_API void BGBMID_BTAC_Band0Stat64StreamS16(s16 *iblk, byte *oblk, int len, int flags);
//base/bm_btac_sample.c
BMID_API BGBMID_Sample *BGBMID_BTAC_CreateSample(int chan, int rate, int bits, int len, int flags);
BMID_API int BGBMID_BTAC_FlattenSample(BGBMID_Sample *head, byte *obuf, int osz);
BMID_API int BGBMID_BTAC_SizeFlattenSample(BGBMID_Sample *head);
BMID_API int BGBMID_BTAC_Encode(short *ibuf,int ch, int rt, int len, int flags, byte *obuf, int obsz);
BMID_API int BGBMID_BTAC_StoreSample(char *name, BGBMID_Sample *head);
BMID_API byte *BGBMID_LoadFile(char *name, int *rsz);
BMID_API int BGBMID_StoreFile(char *name, void *buf, int sz);
BMID_API BGBMID_Sample *BGBMID_BTAC_LoadSample(char *name);
BGBMID_Sample *BGBMID_Sound_LoadBTAC(char *name);
BGBMID_Patch *BGBMID_LoadPatchRawBTAC(char *name);
BMID_API int BGBMID_BTAC_GetSamplePoint_IndexBlock(BGBMID_Sample *head, int idx);
BMID_API int BGBMID_BTAC_GetSamplePoint(BGBMID_Sample *head,int idx, int depth, int ch);
//base/bm_pack.c
int bgbmid_strcmp(const char *stra, const char *strb);
int bgbmid_stricmp(const char *stra, const char *strb);
s32 bgbmid_get_le32(byte *b);
int bgbmid_get_parsehex(char *str);
BGBMID_PackState *BGBMID_LookupPack(char *name);
BGBMID_PackState *BGBMID_OpenPack(char *name);
int BGBMID_LookupPackFile(BGBMID_PackState *ctx, char *name,int *roffs, int *rsize);
void *BGBMID_PackLookupFile(char *name, int *roffs, int *rsize);
byte *BGBMID_PackReadFile(char *name, int *rsize);
//base/btac2_common.c
void BTAC2_Common_TransformWHT(int *iblk, int *oblk, int cnt, int dc);
void BTAC2_Common_TransformIWHT(int *iblk, int *oblk, int cnt, int dc);
void BTAC2_Common_QuantWHT(BGBMID_BTAC2_Context *ctx,int *iblk, int *oblk, int blen, int qtab, int qf);
void BTAC2_Common_DequantWHT(BGBMID_BTAC2_Context *ctx,int *iblk, int *oblk, int blen, int qtab, int qf);
BGBMID_BTAC2_Context *BTAC2_Common_AllocContext();
int BTAC2_Common_TransposeByte(int v);
int BTAC2_Common_TransposeWord(int v);
int BTAC2_Common_SetupTable(byte *cl, int ncl,u16 *tc, u16 *tm, byte *tl, u16 *ti, u16 *tn);
//base/btac2_encode.c
void btac2_encode_dbgPrintLog(char *str, ...);
void BTAC2_Encode_WriteBit(BGBMID_BTAC2_Context *ctx, int i);
void BTAC2_Encode_WriteNBits(BGBMID_BTAC2_Context *ctx, int i, int n);
void BTAC2_Encode_WriteNBitsL(BGBMID_BTAC2_Context *ctx, u64 i, int n);
void BTAC2_Encode_Write2Bits(BGBMID_BTAC2_Context *ctx, int i);
void BTAC2_Encode_Write3Bits(BGBMID_BTAC2_Context *ctx, int i);
void BTAC2_Encode_Write4Bits(BGBMID_BTAC2_Context *ctx, int i);
void BTAC2_Encode_WriteRice(BGBMID_BTAC2_Context *ctx, int v, int k);
int BTAC2_Encode_CountWriteRice(BGBMID_BTAC2_Context *ctx, int v, int k);
void BTAC2_Encode_WriteSRice(BGBMID_BTAC2_Context *ctx, int v, int k);
int BTAC2_Encode_CountWriteSRice(BGBMID_BTAC2_Context *ctx, int v, int k);
void BTAC2_Encode_WriteExpRice(BGBMID_BTAC2_Context *ctx, int v, int k);
void BTAC2_Encode_WriteExpSRice(BGBMID_BTAC2_Context *ctx, int v, int k);
void BTAC2_Encode_FlushBits(BGBMID_BTAC2_Context *ctx);
void BTAC2_Encode_PushSetOutput(BGBMID_BTAC2_Context *ctx,byte *obuf, int sz);
int BTAC2_Encode_PopSetOutput(BGBMID_BTAC2_Context *ctx);
int BTAC2_Encode_BalanceTree_r(short *nodes, short *nlen,int root, int h, int ml);
void BTAC2_Encode_CalcLengths_r(short *nodes, byte *cl, int root, int h);
int BTAC2_Encode_BuildLengths(int *stat, int nc, byte *cl, int ml);
int BTAC2_Encode_BuildLengthsAdjust(int *stat, int nc, byte *cl, int ml);
void BTAC2_Encode_EncodeHufftabSymbol(BGBMID_BTAC2_Context *ctx,int v, int rk);
int BTAC2_Encode_CountEncodeHufftabSymbol(BGBMID_BTAC2_Context *ctx, int v, int rk);
void BTAC2_Encode_StatLengths(BGBMID_BTAC2_Context *ctx,byte *cl, int nc, int *stat);
void BTAC2_Encode_EncodeCodeLengths(BGBMID_BTAC2_Context *ctx,byte *cl, int nc, int rk);
int BTAC2_Encode_CountEncodeCodeLengths(BGBMID_BTAC2_Context *ctx,byte *cl, int nc, int rk);
int BTAC2_Encode_EncodeHuffTable(BGBMID_BTAC2_Context *ctx,int tab, byte *cl, int nc);
byte *BTAC2_Encode_EmitBeginMarkTWOCC(BGBMID_BTAC2_Context *ctx, int a, int b);
void BTAC2_Encode_EmitEndMarkTWOCC(BGBMID_BTAC2_Context *ctx, byte *pt);
byte *BTAC2_Encode_EmitTagMarkTWOCC(BGBMID_BTAC2_Context *ctx, int a, int b);
byte *BTAC2_Encode_EmitBeginMarkFOURCC(BGBMID_BTAC2_Context *ctx, int a, int b, int c, int d);
void BTAC2_Encode_EmitEndMarkFOURCC(BGBMID_BTAC2_Context *ctx, byte *pt);
byte *BTAC2_Encode_EmitTagMarkFOURCC(BGBMID_BTAC2_Context *ctx, int a, int b, int c, int d);
void BTAC2_Encode_EmitFourCC(BGBMID_BTAC2_Context *ctx, int a, int b, int c, int d);
void BTAC2_Encode_EmitEightCC(BGBMID_BTAC2_Context *ctx, int a, int b, int c, int d, int e, int f, int g, int h);
void BTAC2_Encode_EmitBytes(BGBMID_BTAC2_Context *ctx, byte *data, int sz);
void BTAC2_Encode_EmitByte(BGBMID_BTAC2_Context *ctx, int x);
void BTAC2_Encode_EmitWord(BGBMID_BTAC2_Context *ctx, int x);
void BTAC2_Encode_EmitDWord(BGBMID_BTAC2_Context *ctx, int x);
void BTAC2_Encode_EmitQuantTabValue(BGBMID_BTAC2_Context *ctx,int val, int rk);
int BTAC2_Encode_CountEmitQuantTabValue(BGBMID_BTAC2_Context *ctx,int val, int rk);
void BTAC2_Encode_EmitQuantTabSz(BGBMID_BTAC2_Context *ctx,int *tab, int blen, int rk);
int BTAC2_Encode_CountQuantTabSz(BGBMID_BTAC2_Context *ctx,int *tab, int blen, int rk);
void BTAC2_Encode_EmitDQT(BGBMID_BTAC2_Context *ctx, int n);
void BTAC2_Encode_EmitDHT(BGBMID_BTAC2_Context *ctx, int n);
void BTAC2_Encode_EncodeHeaderTables(BGBMID_BTAC2_Context *ctx);
int BTAC2_Encode_CountEncodeSymbol(BGBMID_BTAC2_Context *ctx,int tab, int v);
void BTAC2_Encode_EncodeSymbol(BGBMID_BTAC2_Context *ctx, int tab, int v);
int BTAC2_Encode_CountEncodeCoeffUValue(BGBMID_BTAC2_Context *ctx,int tab, int pfb, u32 val);
void BTAC2_Encode_EncodeCoeffUValue(BGBMID_BTAC2_Context *ctx,int tab, int pfb, u32 val);
void BTAC2_Encode_StatCoeffUValue(BGBMID_BTAC2_Context *ctx,int *stat, int pfb, u32 val);
int BTAC2_Encode_CountEncodeLenUValue(BGBMID_BTAC2_Context *ctx,int tab, int pfb, u32 val);
void BTAC2_Encode_EncodeLenUValue(BGBMID_BTAC2_Context *ctx,int tab, int pfb, u32 val);
void BTAC2_Encode_StatLenUValue(BGBMID_BTAC2_Context *ctx,int *stat, int pfb, u32 val);
int BTAC2_Encode_CountEncodeVal(BGBMID_BTAC2_Context *ctx,int tab, int z, int v);
void BTAC2_Encode_EncodeVal(BGBMID_BTAC2_Context *ctx,int tab, int z, int v);
void BTAC2_Encode_StatVal(BGBMID_BTAC2_Context *ctx,int *stat, int z, int v);
void BTAC2_Encode_EncodeDiffDC(BGBMID_BTAC2_Context *ctx,int tab, int v);
int BTAC2_Encode_CountEncodeDiffDC(BGBMID_BTAC2_Context *ctx,int tab, int v);
void BTAC2_Encode_StatDiffDC(BGBMID_BTAC2_Context *ctx,int *stat, int v);
int BTAC2_Encode_CountEncodeBlock(BGBMID_BTAC2_Context *ctx,int *buf, int blen, int dctab, int actab);
void BTAC2_Encode_EncodeBlock(BGBMID_BTAC2_Context *ctx,int *buf, int blen, int dctab, int actab);
void BTAC2_Encode_StatBlock(BGBMID_BTAC2_Context *ctx,int *buf, int blen, int *dcstat, int *acstat);
void BTAC2_SplitCenterSideS16(s16 *iblk, int *tcblk, int *tsblk, int *rcm, int *rcn, int *rsm, int *rsn, int blen, int flags);
void BTAC2_FilterEncodeBlock(s16 *iblk, byte *oblk,int tag, int blen, int flags);
void BTAC2_Common_PreQuantWHT(BGBMID_BTAC2_Context *ctx,int *iblk, int *oblk, int blen, int qtab, int qf);
void BTAC2_FilterEncodeBlock0(BGBMID_BTAC2_Context *ctx,s16 *iblk, byte *oblk, int blen, int flags);
void BTAC2_FilterStatBlock0(BGBMID_BTAC2_Context *ctx,s16 *iblk, int blen, int flags);
void BTAC2_FilterQStatBlock0(BGBMID_BTAC2_Context *ctx,double *qsec, double *qses, double *qdec, double *qdes, s16 *iblk, int blen, int flags);
void BTAC2_FilterEncodeStreamS16(BGBMID_BTAC2_Context *ctx, s16 *iblk, byte *oblk, int len, int flags);
void BTAC2_FilterStatStreamS16(BGBMID_BTAC2_Context *ctx, s16 *iblk, int len, int flags);
void BTAC2_Encode_SetupTables(BGBMID_BTAC2_Context *ctx, int ch, int rt, int len, int flags);
BMID_API void BTAC2_TestFilterStreamS16(s16 *iblk, byte *oblk, int len, int flags);
BMID_API int BTAC2_Encode(short *ibuf,int ch, int rt, int len, int flags, byte *obuf, int obsz);
BMID_API void BGBMID_BTAC_Band0Stat64StreamS16(s16 *iblk, byte *oblk, int len, int flags);
//base/btac2_decode.c
void BTAC2_Decode_PushRead(BGBMID_BTAC2_Context *ctx);
void BTAC2_Decode_PopRead(BGBMID_BTAC2_Context *ctx);
int BTAC2_Decode_NextByte(BGBMID_BTAC2_Context *ctx);
int BTAC2_Decode_InitReadBytes(BGBMID_BTAC2_Context *ctx, byte *buf, int sz);
int BTAC2_Decode_InitReadStream(BGBMID_BTAC2_Context *ctx, byte *buf, int sz);
int BTAC2_Decode_ReadBit(BGBMID_BTAC2_Context *ctx);
int BTAC2_Decode_Read2Bits(BGBMID_BTAC2_Context *ctx);
int BTAC2_Decode_Read3Bits(BGBMID_BTAC2_Context *ctx);
int BTAC2_Decode_Read4Bits(BGBMID_BTAC2_Context *ctx);
int BTAC2_Decode_Read5Bits(BGBMID_BTAC2_Context *ctx);
int BTAC2_Decode_ReadNBits(BGBMID_BTAC2_Context *ctx, int n);
u64 BTAC2_Decode_ReadNBitsL(BGBMID_BTAC2_Context *ctx, int n);
void BTAC2_Decode_SkipNBits(BGBMID_BTAC2_Context *ctx, int n);
int BTAC2_Decode_ReadRice(BGBMID_BTAC2_Context *ctx, int n);
int BTAC2_Decode_ReadSRice(BGBMID_BTAC2_Context *ctx, int n);
int BTAC2_Decode_PeekWord(BGBMID_BTAC2_Context *ctx);
int BTAC2_Decode_DecodeSymbol(BGBMID_BTAC2_Context *ctx, int tab);
int BTAC2_Decode_DecodeHufftabSymbol(BGBMID_BTAC2_Context *ctx, int rk);
int BTAC2_Decode_DecodeHuffTableFixed(BGBMID_BTAC2_Context *ctx,int tab, int tn);
int BTAC2_Decode_DecodeCodeLengths(BGBMID_BTAC2_Context *ctx,byte *cl, int ncl, int rk);
int BTAC2_Decode_DecodeHuffTable(BGBMID_BTAC2_Context *ctx, int tab);
int BTAC2_Decode_DecodeQuantTable(BGBMID_BTAC2_Context *ctx, int tab);
int BTAC2_Decode_DecodeCoeffUValueBits(BGBMID_BTAC2_Context *ctx, int sym);
int BTAC2_Decode_DecodeCoeffValueBits(BGBMID_BTAC2_Context *ctx, int sym);
int BTAC2_Decode_DecodeTagBits(BGBMID_BTAC2_Context *ctx, int sym);
int BTAC2_Decode_DecodeDiffDC(BGBMID_BTAC2_Context *ctx, int tab);
int BTAC2_Decode_DecodeBlock(BGBMID_BTAC2_Context *ctx,int *buf, int blen, int dctab, int actab);
void BTAC2_Decode_DecodeMarker(BGBMID_BTAC2_Context *ctx,int *rtag, int *rlen, int *rflags);
void BTAC2_Decode_SeekPastMarker(BGBMID_BTAC2_Context *ctx,int tag, int len, int flags);
void BTAC2_Decode_DecodeHeaderTables(BGBMID_BTAC2_Context *ctx, byte *ibuf, int isz);
void BTAC2_MergeCenterSideS16(BGBMID_BTAC2_Context *ctx, s16 *oblk, int *tcblk, int *tsblk, int blen, int flags);
int BTAC2_Decode_FilterDecodeBlock(BGBMID_BTAC2_Context *ctx, byte *ibuf, s16 *oblk, int flags);
void BTAC2_Decode_DecodeBody(BGBMID_BTAC2_Context *ctx, byte *ibuf, int isz);
BMID_API void BTAC2_Sample_DecodeBlock(BGBMID_Sample *self,int blkid, s16 *obuf, int flags);
BMID_API void BTAC2_Sample_DecodeStream(BGBMID_Sample *self,s16 *obuf, int base, int len, int flags);
BMID_API BGBMID_Sample *BGBMID_BTAC2_DecodeSample(byte *ibuf, int isz);
//base/btac2_dct.c
void BTAC2_TransDCT_Stride4(int *iblk, int *oblk,int istride, int ostride);
void BTAC2_TransDCT4Stride(int *iblk, int *oblk,int xstride, int ystride);
void BTAC2_TransIDCT_Stride4(int *iblk, int *oblk,int istride, int ostride);
void BTAC2_TransIDCT4Stride(int *iblk, int *oblk,int xstride, int ystride);
void BTAC2_TransDCT_Stride8(int *iblk, int *oblk,int istride, int ostride);
void BTAC2_TransDCT8Stride(int *iblk, int *oblk,int xstride, int ystride);
void BTAC2_TransIDCT_Stride8(int *iblk, int *oblk,int istride, int ostride);
void BTAC2_TransIDCT_Stride8(int *iblk, int *oblk,int istride, int ostride);
void BTAC2_TransIDCT8Stride(int *iblk, int *oblk,int xstride, int ystride);
void BTAC2_TransDCT_Stride16(s64 *iblk, s64 *oblk,int istride, int ostride);
void BTAC2_TransDCT16Stride(int *iblk, int *oblk,int xstride, int ystride);
void BTAC2_TransIDCT_Stride16(s64 *iblk, s64 *oblk,int istride, int ostride);
void BTAC2_TransIDCT16Stride(int *iblk, int *oblk,int xstride, int ystride);
void BTAC2_TransDCT256(int *iblk, int *oblk);
void BTAC2_TransIDCT256(int *iblk, int *oblk);
void BTAC2_Common_TransformDCT(int *iblk, int *oblk, int cnt, int dc);
void BTAC2_Common_TransformIDCT(int *iblk, int *oblk, int cnt, int dc);
//base/mpglib/layer1.c
//base/mpglib/layer2.c
//base/mpglib/common.c
//base/mpglib/dct64_i386.c
//base/mpglib/decode_i386.c
//base/mpglib/layer3.c
//base/mpglib/tabinit.c
//base/mpglib/interface.c
//base/tts/tts_lpcfir.c
double bgbmid_lpcfir_ssqr(double f);
double bgbmid_lpcfir_ssqrt(double f);
BMID_API int BGBMID_LpcFIR_BuildSampleLPC(s16 *samp, int len, double *fir, int szFir);
BMID_API int BGBMID_LpcFIR_ApplySampleLPC(s16 *ibp, s16 *obp, int len, double *fir, int szFir);
BMID_API int BGBMID_LpcFIR_Normalize(s16 *ibp, s16 *obp, int len, int val);
BMID_API double bgbmid_lpcfir_sin_sqr(double f);
BMID_API double bgbmid_lpcfir_sin_saw(double f);
BMID_API double bgbmid_lpcfir_sin_saw2(double f);
BMID_API double bgbmid_lpcfir_sin_tri(double t);
BMID_API void BGBMID_LpcFIR_LowPass(s16 *ibp, s16 *obp, int len, float q, float r);
BMID_API void BGBMID_LpcFIR_HighPass(s16 *ibp, s16 *obp, int len, float q, float r);
float bgbmid_scurve(float a);
BMID_API void BGBMID_LpcFIR_LowPassLerp(s16 *ibp, s16 *obp, int len, float q0, float q1, float r0, float r1);
BMID_API void BGBMID_LpcFIR_HighPassLerp(s16 *ibp, s16 *obp, int len, float q0, float q1, float r0, float r1);
BMID_API void BGBMID_LpcFIR_BandPass(s16 *ibp, s16 *obp, int len, float ql, float qh, float r);
BMID_API void BGBMID_LpcFIR_BandPassLerp(s16 *ibp, s16 *obp, int len, float ql0, float ql1, float qh0, float qh1, float r0, float r1);
BMID_API void BGBMID_LpcFIR_BandPassAddOut(s16 *ibp, s16 *obp, int len, float ql, float qh, float r);
BMID_API void BGBMID_LpcFIR_BandPass2(s16 *ibp, s16 *obp, int len, int rt, float hz, float w, float r);
BMID_API void BGBMID_LpcFIR_BandPassLerp2(s16 *ibp, s16 *obp, int len, int rt, float hz0, float hz1, float w0, float w1, float r0, float r1);
BMID_API void BGBMID_LpcFIR_BandPassAddOut2(s16 *ibp, s16 *obp, int len, int rt, float hz, float w, float r);
BMID_API void BGBMID_LpcFIR_AddNoise(s16 *ibp, s16 *obp, int len, float vol, float q, float r);
BMID_API void BGBMID_LpcFIR_AddWhiteNoise(s16 *ibp, s16 *obp, int len, float vol);
BMID_API void BGBMID_LpcFIR_AddSamples(s16 *ibp0, s16 *ibp1, s16 *obp, int len);
BMID_API void BGBMID_LpcFIR_ScaleSamples(s16 *ibp, s16 *obp, int len, float vol);
BMID_API void BGBMID_LpcFIR_AddScaleSamples(s16 *ibp0, s16 *ibp1, s16 *obp, int len, float vol);
BMID_API void BGBMID_LpcFIR_ScaleSamplesLerp(s16 *ibp, s16 *obp, int len, float vol0, float vol1);
BMID_API void BGBMID_LpcFIR_AddScaleSamplesLerp(s16 *ibp0, s16 *ibp1, s16 *obp, int len, float vol0, float vol1);
BMID_API void BGBMID_LpcFIR_AddNoiseBandPass2(s16 *ibp, s16 *obp, int len, int rt, float vol, float hz, float w, float r);
BMID_API int BGBMID_LpcFIR_AddFormant(s16 *ibp, s16 *obp, int len, float hz, float vol);
//base/tts/bsg_bitstream.c
int SGWZ_NextByte();
int SGWZ_SetupReadStream();
int SGWZ_InitStream(byte *buf);
int SGWZ_InitWriteStream(byte *buf);
void SGWZ_AdjustRead();
void SGWZ_AdjustWrite();
int SGWZ_ReadBit();
int SGWZ_ReadNBits(int n);
void SGWZ_SkipNBits(int n);
int SGWZ_PeekWord();
void SGWZ_WriteBit(int i);
void SGWZ_WriteNBits(int i, int n);
void SGWZ_FlushBits();
int SGWZ_ReadByte();
int SGWZ_ReadShort();
int SGWZ_ReadInt();
void SGWZ_WriteByte(int i);
void SGWZ_WriteShort(int i);
void SGWZ_WriteInt(int i);
int SGWZ_ReadUnary();
int SGWZ_ReadRice(int n);
void SGWZ_WriteUnary(int i);
void SGWZ_WriteRice(int v, int n);
int SGWZ_ReadSRice(int n);
void SGWZ_WriteSRice(int v, int n);
//base/tts/bsg_bsgen.c
BMID_API void BSG_Init(void);
BMID_API BSG_Voice *BSG_LookupVoice(char *name);
BMID_API BSG_Voice *BSG_NewVoice(char *name, char *base);
BMID_API BSG_Voice *BSG_LoadVoice(char *name, char *base);
BMID_API void BSG_PushWord(BSG_State *ctx, char *s);
BMID_API void BSG_PushWordEnd(BSG_State *ctx, char *s);
BMID_API void BSG_GenPhon(BSG_State *ctx, char *str);
BMID_API void BSG_OutSamples2(BSG_State *ctx, short *buf, int cnt);
BMID_API void BSG_OutStep(BSG_State *ctx, short lv, short iv);
BMID_API void BSG_OutSamples21(BSG_State *ctx, short *buf, int cnt);
BMID_API void BSG_OutSamples(BSG_State *ctx, short *buf, int cnt);
BMID_API void BSG_GenDelay(BSG_State *ctx, int ms);
BMID_API void BSG_OutDict(BSG_State *ctx, BSG_DictEnt *smp);
BMID_API void BSG_Command(BSG_State *ctx, char *str);
BMID_API void BSG_ProcessItem(BSG_State *ctx);
BMID_API void BSG_ProcessItems(BSG_State *ctx);
BMID_API void BSG_GenWord(BSG_State *ctx, char *str);
BMID_API int BSG_ReadSamples(BSG_State *ctx, short *buf, int len);
BMID_API BSG_State *BSG_NewContext(char *voice);
BMID_API void BSG_FreeContext(BSG_State *ctx);
char *BSG_EatWhite(char *s);
int BSG_OpChar(int c);
char *BSG_Token(char *s, char *b);
BMID_API void BSG_SendTextSentence(BSG_State *ctx, char *str, char *lt);
BMID_API void BSG_SendText(BSG_State *ctx, char *str);
//base/tts/bsg_lexitem.c
void BSG_GenNumber_r(BSG_State *ctx, int v);
void BSG_GenNumber_th_r(BSG_State *ctx, int v);
void BSG_GenNumber_digit(BSG_State *ctx, int v);
void BSG_GenNumber(BSG_State *ctx, char *s);
void BSG_GenAcron(BSG_State *ctx, char *str);
int BSG_SpellVowel(char *str);
int BSG_SpellConsonant(char *str);
char *BSG_SpellMonograph(char *str);
char *BSG_SpellDigraph(char *str);
char *BSG_SpellTrigraph(char *str);
int BSG_SpellCheckCE(char *str);
int BSG_SpellCheckCV(char *str);
void BSG_GenDecipher(BSG_State *ctx, char *str);
//base/tts/bsg_samp.c
int bsg_stricmp(char *s0, char *s1);
short *BSG_LoadSamp_44Mono16(BSG_Voice *ctx, char *name, int *rlen);
BSG_Samp *BSG_FindSamp(BSG_Voice *ctx, char *name);
BSG_Samp *BSG_AllocSamp();
BSG_DictEnt *BSG_AllocDictEnt();
BSG_Samp *BSG_GetSamp(BSG_Voice *ctx, char *name);
int BSG_DictHash(char *str);
BSG_DictEnt *BSG_DictFirst(BSG_Voice *ctx, char *str);
void BSG_LinkDict(BSG_Voice *ctx, BSG_DictEnt *ent);
BSG_DictEnt *BSG_FindDict(BSG_Voice *ctx, char *str);
BSG_DictEnt *BSG_FindDict2(BSG_Voice *ctx, char *str);
BSG_DictEnt *BSG_FindDictPhon(BSG_Voice *ctx, char *str);
int BSG_LoadDict(BSG_Voice *ctx, char *lst);
int BSG_LoadDict(BSG_Voice *ctx, char *lst);
//base/tts/bsg_wavez.c
int SGWZ_PredSample(int s0, int s1, int s2, int s3, int fn);
int SGWZ_FiltEntropy(short *bp, int len, int fn);
int SGWZ_BestFilt(short *bp, int len, int *ev);
int SGWZ_CalcEncValBits(int v, int st);
int SGWZ_CalcEncBits(short *bp, int len, int fn, int st);
int SGWZ_BestEncBits(short *bp, int len, int fn, int *ev);
int SGWZ_EncodePayload(short *bp, int len, int fn, int st);
int SGWZ_DecodePayload(short *bp, int len, int fn, int st);
BMID_API int SGWZ_Encode(short *bp, int rt, int len, byte *obuf);
BMID_API short *SGWZ_DecodeMono16(byte *buf, int *rrt, int *rlen);
BMID_API short *SGWZ_Decode_44Mono16(byte *buf, int *rlen);
BMID_API short *SGWZ_Decode_16Mono16(byte *buf, int *rlen);
