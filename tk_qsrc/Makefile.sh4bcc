#
# Quake Makefile for Linux 2.0
#
# Aug '98 by Zoid <zoid@idsoftware.com>
#
# ELF only
#

BASEVERSION=1.09
VERSION=$(BASEVERSION)$(GLIBC)

ifneq (,$(findstring alpha,$(shell uname -m)))
ARCH=axp
else
ARCH=i386
endif
NOARCH=noarch

BUILD_DEBUG_DIR=debug$(ARCH)$(GLIBC)
BUILD_RELEASE_DIR=release$(ARCH)$(GLIBC)

TOOLPATH=/opt/cross/bin/

CC=bgbcc
OBJDUMP=

TK_CFL=-DARCH_SH4 -DARCH_SH4LE -D__32BIT__
TK_LDFL= $(TK_CFL)

# BASE_CFLAGS=-Dstricmp=strcasecmp
BASE_CFLAGS=-Itk_clib/include -Ltk_clib

CFLAGS=$(TK_CFL) $(BASE_CFLAGS) -mBSR1
LDFLAGS=$(TK_LDFL) -lvxcore

# CFLAGS64=$(TK_CFL) $(BASE_CFLAGS) -mBJX2E
# CFLAGS64=$(TK_CFL) $(BASE_CFLAGS) -mBJX2F -O2 -fwex3w -fwexj -Zz
# CFLAGS64=$(TK_CFL) $(BASE_CFLAGS) -mBJX2 -O2 -fwex3w -fwexj -Zz
CFLAGS64=$(TK_CFL) $(BASE_CFLAGS) -mBJX2 -O2 -fwex3w -fwexj -Zz -fxgpr -fqmul
# CFLAGS64=$(TK_CFL) $(BASE_CFLAGS) -mBJX2 -O2 -fwex3w -fwexj -Zz \
#	-fxgpr -fdmacl -fmovc
# CFLAGS64=$(TK_CFL) $(BASE_CFLAGS) -mBJX2 -O2 -fwex3w -fwexj -Zz -fnowexify
# CFLAGS64=$(TK_CFL) $(BASE_CFLAGS) -mBJX2F -O2
# CFLAGS64=$(TK_CFL) $(BASE_CFLAGS) -mBJX2F -Os
# CFLAGS64=$(TK_CFL) $(BASE_CFLAGS) -mBJX2
LDFLAGS64=$(TK_LDFL) -lvxcore64

GL_CFLAGS64	= $(CFLAGS64) /DGLQUAKE

all: targets

# targets: quake_sh4b.elf quake_cgfx_sh4b.elf primecnt_sh4b.elf \
#	quake_b64b.exe primecnt_b64b.exe
targets: quake_b64b.exe dhry_b64b.exe \
	glquake_tkra_b64b.exe
# glquake_b64b.exe

SQUAKE_SRCS = \
	q1base/cl_demo.c \
	q1base/cl_input.c \
	q1base/cl_main.c \
	q1base/cl_parse.c \
	q1base/cl_tent.c \
	q1base/chase.c \
	q1base/cmd.c \
	q1base/common.c \
	q1base/console.c \
	q1base/crc.c \
	q1base/cvar.c \
	q1base/draw.c \
	q1base/d_edge.c \
	q1base/d_init.c \
	q1base/d_modech.c \
	q1base/d_part.c \
	q1base/d_polyse.c \
	q1base/d_scan.c \
	q1base/d_sky.c \
	q1base/d_sprite.c \
	q1base/d_surf.c \
	q1base/d_vars.c \
	q1base/d_zpoint.c \
	q1base/host.c \
	q1base/host_cmd.c \
	q1base/keys.c \
	q1base/menu.c \
	q1base/mathlib.c \
	q1base/model.c \
	q1base/net_loop.c \
	q1base/net_main.c \
	q1base/net_vcr.c \
	q1base/net_none.c \
	q1base/nonintel.c \
	q1base/pr_cmds.c \
	q1base/pr_edict.c \
	q1base/pr_exec.c \
	q1base/r_aclip.c \
	q1base/r_alias.c \
	q1base/r_bsp.c \
	q1base/r_light.c \
	q1base/r_draw.c \
	q1base/r_efrag.c \
	q1base/r_edge.c \
	q1base/r_misc.c \
	q1base/r_main.c \
	q1base/r_sky.c \
	q1base/r_sprite.c \
	q1base/r_surf.c \
	q1base/r_part.c \
	q1base/r_vars.c \
	q1base/screen.c \
	q1base/sbar.c \
	q1base/sv_main.c \
	q1base/sv_phys.c \
	q1base/sv_move.c \
	q1base/sv_user.c \
	q1base/zone.c	\
	q1base/view.c	\
	q1base/wad.c \
	q1base/world.c \
	q1base/cd_null.c \
	q1base/in_btsh4.c \
	q1base/sys_btsh4.c \
	q1base/vid_btsh4.c \
	q1base/snd_dma.c \
	q1base/snd_mem.c \
	q1base/snd_mix.c \
	q1base/snd_btsh4.c \
	\
	q1base/r_surf_bjx2.S \


SKIP_SRCS=\
	q1base/d_fill.c \
	q1base/snd_null.c \
	q1base/net_dgrm.c \
	q1base/net_bsd.c \
	q1base/sys_linux.c \
	q1base/net_udp.c \
	q1base/cd_linux.c \
	q1base/vid_svgalib.c \
	\
	q1base/snd_dma.c \
	q1base/snd_mem.c \
	q1base/snd_mix.c \
	q1base/snd_linux.c \
	\
	q1base/d_draw.c \
	q1base/d_draw16.c \
	q1base/d_parta.c \
	q1base/d_polysa.c \
	q1base/d_scana.c \
	q1base/d_spr8.c \
	q1base/d_varsa.c \
	q1base/math.c \
	q1base/r_aliasa.c \
	q1base/r_drawa.c \
	q1base/r_edgea.c \
	q1base/r_varsa.c \
	q1base/surf16.c \
	q1base/surf8.c \
	q1base/worlda.c \
	q1base/r_aclipa.c \
	q1base/snd_mixa.c \
	q1base/sys_dosa.o

GLQUAKE_CORESRCS = \
	q1base/cl_demo.c	\
	q1base/cl_input.c	\
	q1base/cl_main.c	\
	q1base/cl_parse.c	\
	q1base/cl_tent.c	\
	q1base/chase.c		\
	q1base/cmd.c		\
	q1base/common.c		\
	q1base/console.c	\
	q1base/crc.c		\
	q1base/cvar.c		\
	\
	q1base/glquake/gl_draw.c	\
	q1base/glquake/gl_mesh.c	\
	q1base/glquake/gl_model.c	\
	q1base/glquake/gl_refrag.c	\
	q1base/glquake/gl_rlight.c	\
	q1base/glquake/gl_rmain.c	\
	q1base/glquake/gl_rmisc.c	\
	q1base/glquake/gl_rsurf.c	\
	q1base/glquake/gl_screen.c	\
	q1base/glquake/gl_test.c	\
	q1base/glquake/gl_warp.c	\
	q1base/glquake/gl_qgl.c		\
	\
	q1base/host.c		\
	q1base/host_cmd.c	\
	q1base/keys.c		\
	q1base/menu.c		\
	q1base/mathlib.c	\
	q1base/net_loop.c	\
	q1base/net_main.c	\
	q1base/net_vcr.c	\
	q1base/net_none.c	\
	q1base/pr_cmds.c	\
	q1base/pr_edict.c	\
	q1base/pr_exec.c	\
	q1base/r_part.c		\
	q1base/sbar.c		\
	q1base/sv_main.c	\
	q1base/sv_phys.c	\
	q1base/sv_move.c	\
	q1base/sv_user.c	\
	q1base/zone.c		\
	q1base/view.c		\
	q1base/wad.c		\
	q1base/world.c		\
	\
	q1base/cd_null.c \
	\
	q1base/in_btsh4.c \
	q1base/sys_btsh4.c \
	q1base/snd_dma.c \
	q1base/snd_mem.c \
	q1base/snd_mix.c \
	q1base/snd_btsh4.c

GLQUAKE_SRCS = \
	$(GLQUAKE_CORESRCS)			\
	q1base/vid_btsh4_gl.c		\

TKRA_SRCS = \
	tkrast/tkr_blend.c			\
	tkrast/tkr_blend_bjx2.c		\
	tkrast/tkr_context.c		\
	tkrast/tkr_edge.c			\
	tkrast/tkr_glbegin.c		\
	tkrast/tkr_glenable.c		\
	tkrast/tkr_glgpa.c			\
	tkrast/tkr_glmatrix.c		\
	tkrast/tkr_gltex.c			\
	tkrast/tkr_matrix.c			\
	tkrast/tkr_multi.c			\
	tkrast/tkr_span.c			\
	tkrast/tkr_span_bjx2.c		\
	tkrast/tkr_span_zt.c		\
	tkrast/tkr_span_zt_bjx2.c	\
	tkrast/tkr_span_bf.c		\
	tkrast/tkr_span_bf_bjx2.c	\
	tkrast/tkr_span_hzt.c		\
	tkrast/tkr_teximg.c			\
	tkrast/tkr_trans.c			\

GLQUAKE_TKRA_SRCS = \
	$(GLQUAKE_CORESRCS)			\
	tkrast/tkr_multi.c			\
	q1base/vid_btsh4_tkra.c		\

DHRY_SRCS =			\
	dhry/dhry_1.c	\
	dhry/dhry_2.c

quake_sh4b.elf: $(SQUAKE_SRCS)
	$(CC) $(CFLAGS) -o $@ $(SQUAKE_SRCS) $(LDFLAGS)
#	$(OBJDUMP) -t $@ > quake_sh4b.map

quake_cgfx_sh4b.elf: $(SQUAKE_SRCS)
	$(CC) $(CFLAGS) -DCONGFX -o $@ $(SQUAKE_SRCS) $(LDFLAGS)
#	$(OBJDUMP) -t $@ > quake_cgfx_sh4b.map

primecnt_sh4b.elf: primecnt.c
	$(CC) $(CFLAGS) -o $@ primecnt.c $(LDFLAGS)
#	$(OBJDUMP) -t primecnt_sh4b.elf > primecnt_sh4b.map


dhry_b64b.exe: $(DHRY_SRCS)
	$(CC) $(CFLAGS64) -o $@ $(DHRY_SRCS) $(LDFLAGS64) -DTIME -DREG=register


quake_b64b.exe: $(SQUAKE_SRCS)
	$(CC) $(CFLAGS64) -o $@ $(SQUAKE_SRCS) $(LDFLAGS64)

glquake_b64b.exe: $(GLQUAKE_SRCS)
	$(CC) $(GL_CFLAGS64) -o $@ $(GLQUAKE_SRCS) $(LDFLAGS64)

glquake_tkra_b64b.exe: $(GLQUAKE_TKRA_SRCS) $(TKRA_SRCS)
	$(CC) $(GL_CFLAGS64) -o $@ $(GLQUAKE_TKRA_SRCS) $(LDFLAGS64) -DUSE_TKRA

primecnt_b64b.exe: primecnt.c
	$(CC) $(CFLAGS64) -o $@ primecnt.c $(LDFLAGS64)

btic1h2_b32.exe: tst_btic1h2/bt1h_vfwdrv.c
	$(CC) $(CFLAGS) -o $@ tst_btic1h2/bt1h_vfwdrv.c $(LDFLAGS)

btic1h2_b64.exe: tst_btic1h2/bt1h_vfwdrv.c
	$(CC) $(CFLAGS64) -o $@ tst_btic1h2/bt1h_vfwdrv.c $(LDFLAGS64)

####


GLSVGA_OBJS=$(BUILDDIR)/glquake/gl_vidlinux.o

GLX_OBJS=$(BUILDDIR)/glquake/gl_vidlinuxglx.o

clean: clean-debug clean-release
	rm -f squake.spec glquake.spec quake.x11.spec

clean-debug:
	$(MAKE) clean2 BUILDDIR=$(BUILD_DEBUG_DIR) CFLAGS="$(DEBUG_CFLAGS)"

clean-release:
	$(MAKE) clean2 BUILDDIR=$(BUILD_RELEASE_DIR) CFLAGS="$(DEBUG_CFLAGS)"

clean2:
	-rm -f $(SQUAKE_OBJS) $(X11_OBJS) $(GLQUAKE_OBJS) $(GLSVGA_OBJS) \
		$(GLX_OBJS)

