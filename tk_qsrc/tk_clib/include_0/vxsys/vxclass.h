#ifndef _VXDYOBJ_H_
#define _VXDYOBJ_H_

#include <stdarg.h>

#ifndef DYC_T
#define DYC_T
typedef struct BGBGC_ClassInfo_s *dycClass;
typedef struct BGBGC_ClassSlot_s *dycSlot;
typedef struct BGBGC_ClassMinf_s *dycMethod;
typedef struct BGBGC_ClassBase_s *dycObject;
typedef struct BGBGC_ObjProto_s *dycObjProto;
typedef struct BGBGC_ClassVinf_s *dycClassV;
typedef struct BGBDYC_Array_s *dycArray;
typedef struct BGBDYC_ArrayN_s *dycArrayN;
#endif

#ifndef DYT_T
#define DYT_T
#ifdef __BSCC
typedef void *dyt;
//typedef __variant dyt;
#else
typedef void *dyt;
#endif
#endif



//base/dyc_api.c
int dycObjectP(dyt obj);
int dycClassP(dyt obj);
int dycSlotP(dyt obj);
int dycMethodP(dyt obj);
void dycBeginClass(char *name, char *super);
dycClass dycEndClass();
void dycBeginClassAnon(dycClass super);
dycClass dycEndClassAnon();
void dycClassSuper(char *name);
void dycSlotBasic(char *name, char *sig);
void dycSlotStatic(char *name, char *sig);
void dycSlotInit(char *name, char *sig);

void dycSlotStatici(char *name, char *sig, int val);
void dycSlotStaticl(char *name, char *sig, s64 val);
void dycSlotStaticf(char *name, char *sig, double val);
void dycSlotStaticd(char *name, char *sig, double val);
void dycSlotStaticU(char *name, char *sig, void *val);
void dycSlotIniti(char *name, char *sig, int val);
void dycSlotInitl(char *name, char *sig, s64 val);
void dycSlotInitf(char *name, char *sig, double val);
void dycSlotInitd(char *name, char *sig, double val);
void dycSlotInitU(char *name, char *sig, void *val);

void dycSlotDelegate(char *name, char *cname);
void dycSlotStaticDelegate(char *name, char *cname);
void dycMethodBasic(char *name, char *sig);
void dycMethodStatic(char *name, char *sig);
void dycMethodFunc(char *name, char *sig, dyt fcn);
void dycMethodStaticFunc(char *name, char *sig, dyt fcn);

void dycMethodCFunc(char *name, char *sig, void *fcn);
void dycMethodCFuncData(char *name, char *sig, void *fcn, void *data);
void dycMethodCSelf(char *name, char *sig, void *fcn);
void dycMethodCSelfData(char *name, char *sig, void *fcn, void *data);

void dycMethodStaticCFunc(char *name, char *sig, void *fcn);
void dycMethodStaticCFuncData(char *name, char *sig, void *fcn, void *data);
void dycMethodStaticCSelf(char *name, char *sig, void *fcn);
void dycMethodStaticCSelfData(char *name, char *sig, void *fcn, void *data);

void dycSlotMethod(char *name, char *sig);
void dycStaticSlotMethod(char *name, char *sig);

void dycClassInterface(char *name);
void dycBeginIface(char *name, char *super);

dycClass dycEndIface();
void dycIfaceSuper(char *name);
void dycIfaceMethod(char *name, char *sig);
void dycIfaceSlot(char *name, char *sig);

void dycBeginStruct(char *name);
dycClass dycEndStruct();

dycClass dycGetClass(char *name);
dycObject dycAlloc(dycClass inf);

int dycSubclassP(dycClass info, dycClass super);
int dycInstanceP(dycObject obj, dycClass inf);

dycClass dycGetObjClass(dycObject obj);
dycClass dycGetClassSuper(dycClass inf);
char *dycGetClassName(dycClass inf);
char *dycGetObjClassName(dycObject obj);
dycClassV dycGetClassVersion(dycClass inf);
int dycGetStructSize(dycClassV vinf);
dycClass dycGetVersionClass(dycClassV vinf);

char *dycGetSlotName(dycSlot idx);
char *dycGetSlotSig(dycSlot idx);
dycClass dycGetSlotClass(dycSlot idx);
char *dycGetMethodName(dycMethod idx);
char *dycGetMethodSig(dycMethod idx);
dycClass dycGetMethodClass(dycMethod idx);

dycSlot dycIdxSlot(dycClass info, char *name);
dycSlot dycIdxObjSlot(dycObject obj, char *name);
dycMethod dycIdxMethod(dycClass inf, char *name, char *sig);
dycMethod dycIdxObjMethod(dycObject obj, char *name, char *sig);

void *dycGetSlotPtr(dycObject obj, dycSlot idx);
void *dycGetInitPtr(dycClass inf, dycSlot idx);
void *dycGetStaticPtr(dycClass inf, dycSlot idx);
void *dycGetStructPtr(dycClassV vinf, void *obj, dycSlot idx);

void *dycPtrSlot(dycObject obj, char *name);
void *dycPtrStaticSlot(dycClass info, char *name);
void *dycPtrInitSlot(dycClass info, char *name);
void *dycPtrStructSlot(dycClassV vinf, void *obj, char *name);

int dycInstanceOfP(dycObject obj, char *name);
int dycSubclassOfP(char *name, char *super);

dyt dycLookupMethodSig(dycObject obj, char *name, char *sig);
dyt dycGetMethodFunc(dycClass inf, dycMethod idx);
dyt dycGetObjMethodFunc(dycObject obj, dycMethod idx);
void dycSetMethodFunc(dycClass inf, dycMethod idx, dyt fcn);
void dycSetObjMethodFunc(dycObject obj, dycMethod idx, dyt fcn);
dycSlot dycAddObjSlot(dycObject obj, char *name, char *sig);
dycMethod dycAddObjMethod(dycObject obj, char *name, char *sig);
dycObject dycCloneObject(dycObject obj);
dycObject dycGetObjDelegate(dycObject obj, char *name);
void dycSetObjDelegate(dycObject obj, char *name, dycObject obj1);
dycSlot *dycEnumSlotArray(dycClass inf);
dycMethod *dycEnumMethodArray(dycClass inf);
dycSlot *dycEnumClassSlotArray(char *name);
dycMethod *dycEnumClassMethodArray(char *name);
dycObject dycAllocClass(char *name);
void *dycPtrClassSlot(char *cname, char *sname);
dycSlot dycIdxClassSlot(char *cname, char *sname);
dycMethod dycIdxClassMethod(char *cname, char *name, char *sig);
dyt dycGetSlot(dycObject obj, char *name);
dyt dycGetSlotr(dycObject obj, char *name);
void *dycGetSlotp(dycObject obj, char *name);
int dycGetSlotsb(dycObject obj, char *name);
int dycGetSlotub(dycObject obj, char *name);
int dycGetSlotss(dycObject obj, char *name);
int dycGetSlotus(dycObject obj, char *name);
int dycGetSloti(dycObject obj, char *name);
s64 dycGetSlotl(dycObject obj, char *name);
float dycGetSlotf(dycObject obj, char *name);
double dycGetSlotd(dycObject obj, char *name);
int dycSetSlot(dycObject obj, char *name, dyt val);
int dycSetSlotr(dycObject obj, char *name, dyt val);
int dycSetSlotp(dycObject obj, char *name, void *val);
int dycSetSlotsb(dycObject obj, char *name, int val);
int dycSetSlotub(dycObject obj, char *name, int val);
int dycSetSlotss(dycObject obj, char *name, int val);
int dycSetSlotus(dycObject obj, char *name, int val);
int dycSetSloti(dycObject obj, char *name, int val);
int dycSetSlotl(dycObject obj, char *name, s64 val);
int dycSetSlotf(dycObject obj, char *name, float val);
int dycSetSlotd(dycObject obj, char *name, double val);
int dycGetsb(dycObject obj, dycSlot idx);
int dycGetub(dycObject obj, dycSlot idx);
int dycGetss(dycObject obj, dycSlot idx);
int dycGetus(dycObject obj, dycSlot idx);
int dycGeti(dycObject obj, dycSlot idx);
s64 dycGetl(dycObject obj, dycSlot idx);
float dycGetf(dycObject obj, dycSlot idx);
double dycGetd(dycObject obj, dycSlot idx);
dyt dycGetr(dycObject obj, dycSlot idx);
void *dycGetp(dycObject obj, dycSlot idx);
void dycSetsb(dycObject obj, dycSlot idx, int val);
void dycSetub(dycObject obj, dycSlot idx, int val);
void dycSetss(dycObject obj, dycSlot idx, int val);
void dycSetus(dycObject obj, dycSlot idx, int val);
void dycSeti(dycObject obj, dycSlot idx, int val);
void dycSetl(dycObject obj, dycSlot idx, s64 val);
void dycSetf(dycObject obj, dycSlot idx, float val);
void dycSetd(dycObject obj, dycSlot idx, double val);
void dycSetr(dycObject obj, dycSlot idx, dyt val);
void dycSetp(dycObject obj, dycSlot idx, void *val);
int dycGetStaticsb(dycClass inf, dycSlot idx);
int dycGetStaticub(dycClass inf, dycSlot idx);
int dycGetStaticss(dycClass inf, dycSlot idx);
int dycGetStaticus(dycClass inf, dycSlot idx);
int dycGetStatici(dycClass inf, dycSlot idx);
s64 dycGetStaticl(dycClass inf, dycSlot idx);
float dycGetStaticf(dycClass inf, dycSlot idx);
double dycGetStaticd(dycClass inf, dycSlot idx);
dyt dycGetStaticr(dycClass inf, dycSlot idx);
void *dycGetStaticp(dycClass inf, dycSlot idx);
void dycSetStaticsb(dycClass inf, dycSlot idx, int val);
void dycSetStaticub(dycClass inf, dycSlot idx, int val);
void dycSetStaticss(dycClass inf, dycSlot idx, int val);
void dycSetStaticus(dycClass inf, dycSlot idx, int val);
void dycSetStatici(dycClass inf, dycSlot idx, int val);
void dycSetStaticl(dycClass inf, dycSlot idx, s64 val);
void dycSetStaticf(dycClass inf, dycSlot idx, float val);
void dycSetStaticd(dycClass inf, dycSlot idx, double val);
void dycSetStaticr(dycClass inf, dycSlot idx, dyt val);
void dycSetStaticp(dycClass inf, dycSlot idx, void *val);
int dycGetInitsb(dycClass inf, dycSlot idx);
int dycGetInitub(dycClass inf, dycSlot idx);
int dycGetInitss(dycClass inf, dycSlot idx);
int dycGetInitus(dycClass inf, dycSlot idx);
int dycGetIniti(dycClass inf, dycSlot idx);
s64 dycGetInitl(dycClass inf, dycSlot idx);
float dycGetInitf(dycClass inf, dycSlot idx);
double dycGetInitd(dycClass inf, dycSlot idx);
dyt dycGetInitr(dycClass inf, dycSlot idx);
void *dycGetInitp(dycClass inf, dycSlot idx);
void dycSetInitsb(dycClass inf, dycSlot idx, int val);
void dycSetInitub(dycClass inf, dycSlot idx, int val);
void dycSetInitss(dycClass inf, dycSlot idx, int val);
void dycSetInitus(dycClass inf, dycSlot idx, int val);
void dycSetIniti(dycClass inf, dycSlot idx, int val);
void dycSetInitl(dycClass inf, dycSlot idx, s64 val);
void dycSetInitf(dycClass inf, dycSlot idx, float val);
void dycSetInitd(dycClass inf, dycSlot idx, double val);
void dycSetInitr(dycClass inf, dycSlot idx, dyt val);
void dycSetInitp(dycClass inf, dycSlot idx, void *val);
int dycGetStructsb(dycClassV vinf, void *obj, dycSlot idx);
int dycGetStructub(dycClassV vinf, void *obj, dycSlot idx);
int dycGetStructss(dycClassV vinf, void *obj, dycSlot idx);
int dycGetStructus(dycClassV vinf, void *obj, dycSlot idx);
int dycGetStructi(dycClassV vinf, void *obj, dycSlot idx);
s64 dycGetStructl(dycClassV vinf, void *obj, dycSlot idx);
float dycGetStructf(dycClassV vinf, void *obj, dycSlot idx);
double dycGetStructd(dycClassV vinf, void *obj, dycSlot idx);
dyt dycGetStructr(dycClassV vinf, void *obj, dycSlot idx);
void *dycGetStructp(dycClassV vinf, void *obj, dycSlot idx);
void dycSetStructsb(dycClassV vinf, void *obj, dycSlot idx, int val);
void dycSetStructub(dycClassV vinf, void *obj, dycSlot idx, int val);
void dycSetStructss(dycClassV vinf, void *obj, dycSlot idx, int val);
void dycSetStructus(dycClassV vinf, void *obj, dycSlot idx, int val);
void dycSetStructi(dycClassV vinf, void *obj, dycSlot idx, int val);
void dycSetStructl(dycClassV vinf, void *obj, dycSlot idx, s64 val);
void dycSetStructf(dycClassV vinf, void *obj, dycSlot idx, float val);
void dycSetStructd(dycClassV vinf, void *obj, dycSlot idx, double val);
void dycSetStructr(dycClassV vinf, void *obj, dycSlot idx, dyt val);
void dycSetStructp(dycClassV vinf, void *obj, dycSlot idx, void *val);
dycObject dycNewClass(char *name);
dycObject dycNewInitClass(char *name, char *sig, ...);
dycObject dycNewInitClassV(char *name, char *sig, va_list args);
dycObject dycNewInitClassU(char *name, char *sig, void **args);
dycObject dycNew(dycClass inf);
dycObject dycNewInit(dycClass inf, char *sig, ...);
dycObject dycNewInitV(dycClass inf, char *sig, va_list args);
dycObject dycNewInitU(dycClass inf, char *sig, void **args);
void *dycCallSigU(dycObject obj, char *name, char *sig, void **args);
void *dycCallSigV(dycObject obj, char *name, char *sig, va_list args);
void *dycCallSig(dycObject obj, char *name, char *sig, ...);
dyt dycCallSigVr(dycObject obj, char *name, char *sig, va_list lst);
int dycCallSigVi(dycObject obj, char *name, char *sig, va_list lst);
s64 dycCallSigVl(dycObject obj, char *name, char *sig, va_list lst);
float dycCallSigVf(dycObject obj, char *name, char *sig, va_list lst);
double dycCallSigVd(dycObject obj, char *name, char *sig, va_list lst);
dyt dycCallSigUr(dycObject obj, char *name, char *sig, void **args);
int dycCallSigUi(dycObject obj, char *name, char *sig, void **args);
s64 dycCallSigUl(dycObject obj, char *name, char *sig, void **args);
float dycCallSigUf(dycObject obj, char *name, char *sig, void **args);
double dycCallSigUd(dycObject obj, char *name, char *sig, void **args);
int dycCallSigi(dycObject obj, char *name, char *sig, ...);
s64 dycCallSigl(dycObject obj, char *name, char *sig, ...);
float dycCallSigf(dycObject obj, char *name, char *sig, ...);
double dycCallSigd(dycObject obj, char *name, char *sig, ...);
void *dycCallU(dycObject obj, dycMethod mth, void **args);
void *dycCallV(dycObject obj, dycMethod mth, va_list args);
void *dycCall(dycObject obj, dycMethod mth, ...);
int dycCallUi(dycObject obj, dycMethod mth, void **args);
s64 dycCallUl(dycObject obj, dycMethod mth, void **args);
float dycCallUf(dycObject obj, dycMethod mth, void **args);
double dycCallUd(dycObject obj, dycMethod mth, void **args);
dyt dycCallUr(dycObject obj, dycMethod mth, void **args);
void *dycCallUp(dycObject obj, dycMethod mth, void **args);
void dycCallUv(dycObject obj, dycMethod mth, void **args);
int dycCallVi(dycObject obj, dycMethod mth, va_list args);
s64 dycCallVl(dycObject obj, dycMethod mth, va_list args);
float dycCallVf(dycObject obj, dycMethod mth, va_list args);
double dycCallVd(dycObject obj, dycMethod mth, va_list args);
dyt dycCallVr(dycObject obj, dycMethod mth, va_list args);
void *dycCallVp(dycObject obj, dycMethod mth, va_list args);
void dycCallVv(dycObject obj, dycMethod mth, va_list args);
int dycCalli(dycObject obj, dycMethod mth, ...);
s64 dycCalll(dycObject obj, dycMethod mth, ...);
float dycCallf(dycObject obj, dycMethod mth, ...);
double dycCalld(dycObject obj, dycMethod mth, ...);
dyt dycCallr(dycObject obj, dycMethod mth, ...);
void *dycCallp(dycObject obj, dycMethod mth, ...);
void dycCallv(dycObject obj, dycMethod mth, ...);
void *dycCallStaticU(dycClass inf, dycMethod mth, void **args);
void *dycCallStaticV(dycClass inf, dycMethod mth, va_list args);
void *dycCallStatic(dycClass inf, dycMethod mth, ...);
int dycCallStaticUi(dycClass inf, dycMethod mth, void **args);
s64 dycCallStaticUl(dycClass inf, dycMethod mth, void **args);
float dycCallStaticUf(dycClass inf, dycMethod mth, void **args);
double dycCallStaticUd(dycClass inf, dycMethod mth, void **args);
dyt dycCallStaticUr(dycClass inf, dycMethod mth, void **args);
void *dycCallStaticUp(dycClass inf, dycMethod mth, void **args);
void dycCallStaticUv(dycClass inf, dycMethod mth, void **args);
int dycCallStaticVi(dycClass inf, dycMethod mth, va_list args);
s64 dycCallStaticVl(dycClass inf, dycMethod mth, va_list args);
float dycCallStaticVf(dycClass inf, dycMethod mth, va_list args);
double dycCallStaticVd(dycClass inf, dycMethod mth, va_list args);
dyt dycCallStaticVr(dycClass inf, dycMethod mth, va_list args);
void *dycCallStaticVp(dycClass inf, dycMethod mth, va_list args);
void dycCallStaticVv(dycClass inf, dycMethod mth, va_list args);
int dycCallStatici(dycClass inf, dycMethod mth, ...);
s64 dycCallStaticl(dycClass inf, dycMethod mth, ...);
float dycCallStaticf(dycClass inf, dycMethod mth, ...);
double dycCallStaticd(dycClass inf, dycMethod mth, ...);
dyt dycCallStaticr(dycClass inf, dycMethod mth, ...);
void *dycCallStaticp(dycClass inf, dycMethod mth, ...);
void dycCallStaticv(dycClass inf, dycMethod mth, ...);
void *dycCallAsU(dycObject obj, dycClass inf, dycMethod mth, void **args);
void *dycCallAsV(dycObject obj, dycClass inf, dycMethod mth, va_list args);
void *dycCallAs(dycObject obj, dycClass inf, dycMethod mth, ...);
int dycCallAsUi(dycObject obj, dycClass inf, dycMethod mth, void **args);
s64 dycCallAsUl(dycObject obj, dycClass inf, dycMethod mth, void **args);
float dycCallAsUf(dycObject obj, dycClass inf, dycMethod mth, void **args);
double dycCallAsUd(dycObject obj, dycClass inf, dycMethod mth, void **args);
dyt dycCallAsUr(dycObject obj, dycClass inf, dycMethod mth, void **args);
void *dycCallAsUp(dycObject obj, dycClass inf, dycMethod mth, void **args);
void dycCallAsUv(dycObject obj, dycClass inf, dycMethod mth, void **args);
int dycCallAsVi(dycObject obj, dycClass inf, dycMethod mth, va_list args);
s64 dycCallAsVl(dycObject obj, dycClass inf, dycMethod mth, va_list args);
float dycCallAsVf(dycObject obj, dycClass inf, dycMethod mth, va_list args);
double dycCallAsVd(dycObject obj, dycClass inf, dycMethod mth, va_list args);
dyt dycCallAsVr(dycObject obj, dycClass inf, dycMethod mth, va_list args);
void *dycCallAsVp(dycObject obj, dycClass inf, dycMethod mth, va_list args);
void dycCallAsVv(dycObject obj, dycClass inf, dycMethod mth, va_list args);
int dycCallAsi(dycObject obj, dycClass inf, dycMethod mth, ...);
s64 dycCallAsl(dycObject obj, dycClass inf, dycMethod mth, ...);
float dycCallAsf(dycObject obj, dycClass inf, dycMethod mth, ...);
double dycCallAsd(dycObject obj, dycClass inf, dycMethod mth, ...);
dyt dycCallAsr(dycObject obj, dycClass inf, dycMethod mth, ...);
void *dycCallAsp(dycObject obj, dycClass inf, dycMethod mth, ...);
void dycCallAsv(dycObject obj, dycClass inf, dycMethod mth, ...);
void *dycCallStructU(void *obj, dycClassV vinf, dycMethod mth, void **args);
void *dycCallStructV(void *obj, dycClassV vinf, dycMethod mth, va_list args);
void *dycCallStruct(void *obj, dycClassV vinf, dycMethod mth, ...);
int dycCallStructUi(void *obj, dycClassV vinf, dycMethod mth, void **args);
s64 dycCallStructUl(void *obj, dycClassV vinf, dycMethod mth, void **args);
float dycCallStructUf(void *obj, dycClassV vinf, dycMethod mth, void **args);
double dycCallStructUd(void *obj, dycClassV vinf, dycMethod mth, void **args);
dyt dycCallStructUr(void *obj, dycClassV vinf, dycMethod mth, void **args);
void *dycCallStructUp(void *obj, dycClassV vinf, dycMethod mth, void **args);
void dycCallStructUv(void *obj, dycClassV vinf, dycMethod mth, void **args);
int dycCallStructVi(void *obj, dycClassV vinf, dycMethod mth, va_list args);
s64 dycCallStructVl(void *obj, dycClassV vinf, dycMethod mth, va_list args);
float dycCallStructVf(void *obj, dycClassV vinf, dycMethod mth, va_list args);
double dycCallStructVd(void *obj, dycClassV vinf, dycMethod mth, va_list args);
dyt dycCallStructVr(void *obj, dycClassV vinf, dycMethod mth, va_list args);
void *dycCallStructVp(void *obj, dycClassV vinf, dycMethod mth, va_list args);
void dycCallStructVv(void *obj, dycClassV vinf, dycMethod mth, va_list args);
int dycCallStructi(void *obj, dycClassV vinf, dycMethod mth, ...);
s64 dycCallStructl(void *obj, dycClassV vinf, dycMethod mth, ...);
float dycCallStructf(void *obj, dycClassV vinf, dycMethod mth, ...);
double dycCallStructd(void *obj, dycClassV vinf, dycMethod mth, ...);
dyt dycCallStructr(void *obj, dycClassV vinf, dycMethod mth, ...);
void *dycCallStructp(void *obj, dycClassV vinf, dycMethod mth, ...);
void dycCallStructv(void *obj, dycClassV vinf, dycMethod mth, ...);
//base/dyc_array.c
dycArray dycNewArray(char *sig, int cnt);
int dycArrayP(dyt p);
int dycArraySigP(dyt p, char *sig);
void *dycArrayV(dycArray arr);
int dycArraySz(dycArray arr);
char *dycArraySig(dycArray arr);
int dycArrayStep(dycArray arr);
void *dycArrayIdxPtr(dycArray arr, int idx);
int dycGetArraysb(dycArray arr, int idx);
int dycGetArrayub(dycArray arr, int idx);
int dycGetArrayss(dycArray arr, int idx);
int dycGetArrayus(dycArray arr, int idx);
int dycGetArrayi(dycArray arr, int idx);
s64 dycGetArrayl(dycArray arr, int idx);
float dycGetArrayf(dycArray arr, int idx);
double dycGetArrayd(dycArray arr, int idx);
dyt dycGetArrayr(dycArray arr, int idx);
void *dycGetArrayp(dycArray arr, int idx);
void dycSetArraysb(dycArray arr, int idx, int val);
void dycSetArrayub(dycArray arr, int idx, int val);
void dycSetArrayss(dycArray arr, int idx, int val);
void dycSetArrayus(dycArray arr, int idx, int val);
void dycSetArrayi(dycArray arr, int idx, int val);
void dycSetArrayl(dycArray arr, int idx, s64 val);
void dycSetArrayf(dycArray arr, int idx, float val);
void dycSetArrayd(dycArray arr, int idx, double val);
void dycSetArrayr(dycArray arr, int idx, dyt val);
void dycSetArrayp(dycArray arr, int idx, void *val);
void *dycArrayIdxPtrBC(dycArray arr, int idx);
int dycGetArraySsb(dycArray arr, int idx);
int dycGetArraySub(dycArray arr, int idx);
int dycGetArraySss(dycArray arr, int idx);
int dycGetArraySus(dycArray arr, int idx);
int dycGetArraySi(dycArray arr, int idx);
s64 dycGetArraySl(dycArray arr, int idx);
float dycGetArraySf(dycArray arr, int idx);
double dycGetArraySd(dycArray arr, int idx);
dyt dycGetArraySr(dycArray arr, int idx);
void *dycGetArraySp(dycArray arr, int idx);
void dycSetArraySsb(dycArray arr, int idx, int val);
void dycSetArraySub(dycArray arr, int idx, int val);
void dycSetArraySss(dycArray arr, int idx, int val);
void dycSetArraySus(dycArray arr, int idx, int val);
void dycSetArraySi(dycArray arr, int idx, int val);
void dycSetArraySl(dycArray arr, int idx, s64 val);
void dycSetArraySf(dycArray arr, int idx, float val);
void dycSetArraySd(dycArray arr, int idx, double val);
void dycSetArraySr(dycArray arr, int idx, dyt val);
void dycSetArraySp(dycArray arr, int idx, void *val);
dycArray DYC_NewArrayM_R(char *sig, int ord, int *sz);
dycArray dycNewArrayM(char *sig, int ord, int *sz);
dycArray dycNewArrayM2(char *sig, int sz0, int sz1);
dycArray dycNewArrayM3(char *sig, int sz0, int sz1, int sz2);
dycArray dycNewArrayM4(char *sig, int sz0, int sz1, int sz2, int sz3);
dycArray dycNewArrayM5(char *sig,int sz0, int sz1, int sz2, int sz3, int sz4);
dycArray dycNewArrayM6(char *sig,int sz0, int sz1, int sz2, int sz3, int sz4, int sz5);
dycArray dycNewArrayM7(char *sig,int sz0, int sz1, int sz2, int sz3, int sz4, int sz5, int sz6);
dycArray dycNewArrayM8(char *sig,int sz0, int sz1, int sz2, int sz3, int sz4, int sz5, int sz6, int sz7);
dycArray dycNewArrayM9(char *sig,int sz0, int sz1, int sz2, int sz3, int sz4, int sz5, int sz6, int sz7, int sz8);
dycArray dycNewArrayM10(char *sig,int sz0, int sz1, int sz2, int sz3, int sz4, int sz5, int sz6, int sz7, int sz8, int sz9);
dycArray dycNewArrayM11(char *sig,int sz0, int sz1, int sz2 , int sz3, int sz4, int sz5, int sz6 , int sz7, int sz8, int sz9, int sz10);
dycArray dycNewArrayM12(char *sig,int sz0, int sz1, int sz2 , int sz3, int sz4, int sz5, int sz6 , int sz7, int sz8, int sz9, int sz10, int sz11);
dycArrayN dycNewArrayN(char *sig, int ord, int *sz);
int dycArrayNP(dyt p);
int dycArrayNSigP(dyt p, char *sig);
int dycArrayNSigOrdP(dyt p, char *sig, int ord);
void *dycArrayNV(dycArrayN arr);
int *dycArrayNSz(dycArrayN arr);
int dycArrayNCnt(dycArrayN arr);
int dycArrayNOrd(dycArrayN arr);
char *dycArrayNSig(dycArrayN arr);
int dycArrayNStep(dycArrayN arr);
void *dycArrayNIdxPtr(dycArrayN arr, int *idx);
void *dycArrayNIdxPtrBC(dycArrayN arr, int *idx);
int dycGetArrayNsb(dycArrayN arr, int *idx);
int dycGetArrayNub(dycArrayN arr, int *idx);
int dycGetArrayNss(dycArrayN arr, int *idx);
int dycGetArrayNus(dycArrayN arr, int *idx);
int dycGetArrayNi(dycArrayN arr, int *idx);
s64 dycGetArrayNl(dycArrayN arr, int *idx);
float dycGetArrayNf(dycArrayN arr, int *idx);
double dycGetArrayNd(dycArrayN arr, int *idx);
dyt dycGetArrayNr(dycArrayN arr, int *idx);
void *dycGetArrayNp(dycArrayN arr, int *idx);
void dycSetArrayNsb(dycArrayN arr, int *idx, int val);
void dycSetArrayNub(dycArrayN arr, int *idx, int val);
void dycSetArrayNss(dycArrayN arr, int *idx, int val);
void dycSetArrayNus(dycArrayN arr, int *idx, int val);
void dycSetArrayNi(dycArrayN arr, int *idx, int val);
void dycSetArrayNl(dycArrayN arr, int *idx, s64 val);
void dycSetArrayNf(dycArrayN arr, int *idx, float val);
void dycSetArrayNd(dycArrayN arr, int *idx, double val);
void dycSetArrayNr(dycArrayN arr, int *idx, dyt val);
void dycSetArrayNp(dycArrayN arr, int *idx, void *val);
int dycGetArrayNSsb(dycArrayN arr, int *idx);
int dycGetArrayNSub(dycArrayN arr, int *idx);
int dycGetArrayNSss(dycArrayN arr, int *idx);
int dycGetArrayNSus(dycArrayN arr, int *idx);
int dycGetArrayNSi(dycArrayN arr, int *idx);
s64 dycGetArrayNSl(dycArrayN arr, int *idx);
float dycGetArrayNSf(dycArrayN arr, int *idx);
double dycGetArrayNSd(dycArrayN arr, int *idx);
dyt dycGetArrayNSr(dycArrayN arr, int *idx);
void *dycGetArrayNSp(dycArrayN arr, int *idx);
void dycSetArrayNSsb(dycArrayN arr, int *idx, int val);
void dycSetArrayNSub(dycArrayN arr, int *idx, int val);
void dycSetArrayNSss(dycArrayN arr, int *idx, int val);
void dycSetArrayNSus(dycArrayN arr, int *idx, int val);
void dycSetArrayNSi(dycArrayN arr, int *idx, int val);
void dycSetArrayNSl(dycArrayN arr, int *idx, s64 val);
void dycSetArrayNSf(dycArrayN arr, int *idx, float val);
void dycSetArrayNSd(dycArrayN arr, int *idx, double val);
void dycSetArrayNSr(dycArrayN arr, int *idx, dyt val);
void dycSetArrayNSp(dycArrayN arr, int *idx, void *val);
void *dycArray2IdxPtr(dycArrayN arr, int y, int x);
void *dycArray2IdxPtrBC(dycArrayN arr, int y, int x);
int dycGetArray2sb(dycArrayN arr, int y, int x);
int dycGetArray2ub(dycArrayN arr, int y, int x);
int dycGetArray2ss(dycArrayN arr, int y, int x);
int dycGetArray2us(dycArrayN arr, int y, int x);
int dycGetArray2i(dycArrayN arr, int y, int x);
s64 dycGetArray2l(dycArrayN arr, int y, int x);
float dycGetArray2f(dycArrayN arr, int y, int x);
double dycGetArray2d(dycArrayN arr, int y, int x);
dyt dycGetArray2r(dycArrayN arr, int y, int x);
void *dycGetArray2p(dycArrayN arr, int y, int x);
void dycSetArray2sb(dycArrayN arr, int y, int x, int val);
void dycSetArray2ub(dycArrayN arr, int y, int x, int val);
void dycSetArray2ss(dycArrayN arr, int y, int x, int val);
void dycSetArray2us(dycArrayN arr, int y, int x, int val);
void dycSetArray2i(dycArrayN arr, int y, int x, int val);
void dycSetArray2l(dycArrayN arr, int y, int x, s64 val);
void dycSetArray2f(dycArrayN arr, int y, int x, float val);
void dycSetArray2d(dycArrayN arr, int y, int x, double val);
void dycSetArray2r(dycArrayN arr, int y, int x, dyt val);
void dycSetArray2p(dycArrayN arr, int y, int x, void *val);
int dycGetArray2Ssb(dycArrayN arr, int y, int x);
int dycGetArray2Sub(dycArrayN arr, int y, int x);
int dycGetArray2Sss(dycArrayN arr, int y, int x);
int dycGetArray2Sus(dycArrayN arr, int y, int x);
int dycGetArray2Si(dycArrayN arr, int y, int x);
s64 dycGetArray2Sl(dycArrayN arr, int y, int x);
float dycGetArray2Sf(dycArrayN arr, int y, int x);
double dycGetArray2Sd(dycArrayN arr, int y, int x);
dyt dycGetArray2Sr(dycArrayN arr, int y, int x);
void *dycGetArray2Sp(dycArrayN arr, int y, int x);
void dycSetArray2Ssb(dycArrayN arr, int y, int x, int val);
void dycSetArray2Sub(dycArrayN arr, int y, int x, int val);
void dycSetArray2Sss(dycArrayN arr, int y, int x, int val);
void dycSetArray2Sus(dycArrayN arr, int y, int x, int val);
void dycSetArray2Si(dycArrayN arr, int y, int x, int val);
void dycSetArray2Sl(dycArrayN arr, int y, int x, s64 val);
void dycSetArray2Sf(dycArrayN arr, int y, int x, float val);
void dycSetArray2Sd(dycArrayN arr, int y, int x, double val);
void dycSetArray2Sr(dycArrayN arr, int y, int x, dyt val);
void dycSetArray2Sp(dycArrayN arr, int y, int x, void *val);
void *dycArray3IdxPtr(dycArrayN arr, int z, int y, int x);
void *dycArray3IdxPtrBC(dycArrayN arr, int z, int y, int x);
int dycGetArray3sb(dycArrayN arr, int z, int y, int x);
int dycGetArray3ub(dycArrayN arr, int z, int y, int x);
int dycGetArray3ss(dycArrayN arr, int z, int y, int x);
int dycGetArray3us(dycArrayN arr, int z, int y, int x);
int dycGetArray3i(dycArrayN arr, int z, int y, int x);
s64 dycGetArray3l(dycArrayN arr, int z, int y, int x);
float dycGetArray3f(dycArrayN arr, int z, int y, int x);
double dycGetArray3d(dycArrayN arr, int z, int y, int x);
dyt dycGetArray3r(dycArrayN arr, int z, int y, int x);
void *dycGetArray3p(dycArrayN arr, int z, int y, int x);
void dycSetArray3sb(dycArrayN arr, int z, int y, int x, int val);
void dycSetArray3ub(dycArrayN arr, int z, int y, int x, int val);
void dycSetArray3ss(dycArrayN arr, int z, int y, int x, int val);
void dycSetArray3us(dycArrayN arr, int z, int y, int x, int val);
void dycSetArray3i(dycArrayN arr, int z, int y, int x, int val);
void dycSetArray3l(dycArrayN arr, int z, int y, int x, s64 val);
void dycSetArray3f(dycArrayN arr, int z, int y, int x, float val);
void dycSetArray3d(dycArrayN arr, int z, int y, int x, double val);
void dycSetArray3r(dycArrayN arr, int z, int y, int x, dyt val);
void dycSetArray3p(dycArrayN arr, int z, int y, int x, void *val);
int dycGetArray3Ssb(dycArrayN arr, int z, int y, int x);
int dycGetArray3Sub(dycArrayN arr, int z, int y, int x);
int dycGetArray3Sss(dycArrayN arr, int z, int y, int x);
int dycGetArray3Sus(dycArrayN arr, int z, int y, int x);
int dycGetArray3Si(dycArrayN arr, int z, int y, int x);
s64 dycGetArray3Sl(dycArrayN arr, int z, int y, int x);
float dycGetArray3Sf(dycArrayN arr, int z, int y, int x);
double dycGetArray3Sd(dycArrayN arr, int z, int y, int x);
dyt dycGetArray3Sr(dycArrayN arr, int z, int y, int x);
void *dycGetArray3Sp(dycArrayN arr, int z, int y, int x);
void dycSetArray3Ssb(dycArrayN arr, int z, int y, int x, int val);
void dycSetArray3Sub(dycArrayN arr, int z, int y, int x, int val);
void dycSetArray3Sss(dycArrayN arr, int z, int y, int x, int val);
void dycSetArray3Sus(dycArrayN arr, int z, int y, int x, int val);
void dycSetArray3Si(dycArrayN arr, int z, int y, int x, int val);
void dycSetArray3Sl(dycArrayN arr, int z, int y, int x, s64 val);
void dycSetArray3Sf(dycArrayN arr, int z, int y, int x, float val);
void dycSetArray3Sd(dycArrayN arr, int z, int y, int x, double val);
void dycSetArray3Sr(dycArrayN arr, int z, int y, int x, dyt val);
void dycSetArray3Sp(dycArrayN arr, int z, int y, int x, void *val);

#endif
