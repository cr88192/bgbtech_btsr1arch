BUILD = .
PATH := $(BUILD):$(PATH)

TK_CFL=-nostdinc -nostdlib -nostartfiles -fno-builtin \
	 -ffunction-sections
TK_LDFL= $TK_CFL \
	-Wl,-nostdlib -Wl,-e,_start -Wl,-T,sh4elf.x

TOOLPATH=/usr/local/bin/
TARGETPFX=riscv64-unknown-elf-

CC=$(TOOLPATH)$(TARGETPFX)gcc
AR=$(TOOLPATH)$(TARGETPFX)ar
AS=$(TOOLPATH)$(TARGETPFX)as

# COPTS= -g -c -O2 -Iinclude $(TK_CFL)
COPTS= -c -Iinclude -Ipdpc201 -Itk_core $(TK_CFL) -O3 \
	-fwrapv -fno-strict-aliasing -fno-inline \
	-march=rv64g -mabi=lp64 \
	-mno-strict-align -std=c17 -ffp-contract=off \
	-mno-fdiv -mno-strict-align -ffast-math

# -mtune=sifive-s76
#	-mno-madd4

SRCS_CLIB = \
	pdpc201/stdio.c \
	pdpc201/stdio_gpa.c \
	pdpc201/string.c \
	pdpc201/stdlib.c \
	pdpc201/start.c \
	pdpc201/time.c \
	pdpc201/errno.c \
	pdpc201/assert.c \
	pdpc201/signal.c \
	pdpc201/locale.c \
	pdpc201/ctype.c \
	pdpc201/setjmp.c \
	pdpc201/threads.c \
	pdpc201/math.c \
	pdpc201/math2.c \
	pdpc201/__memmgr.c \
	pdpc201/stdlibext.c \
	pdpc201/btshx_supa.c \
	pdpc201/btshx_softfpu.c \
	pdpc201/btshx_fpusup.c \
	pdpc201/btshx_lva.c \
	pdpc201/btshx_lvax.c \
	pdpc201/btshx_xli.c \
	pdpc201/btshx_xlf.c \
	pdpc201/btshx_vnf.c \
	pdpc201/btshx_alloca.c \
	pdpc201/bt_mman.c \
	pdpc201/bt_readdir.c \
	pdpc201/bt_dlfcn.c \
	pdpc201/bt_libcgpa.c \
	\
	tk_core/tk_bdev_spi.c \
	tk_core/tk_bdev_vfb.c \
	tk_core/tk_bdev_ram.c \
	tk_core/tk_blkdev.c \
	tk_core/tk_clib.c \
	tk_core/tk_conprn.c \
	tk_core/tk_devfs.c \
	tk_core/tk_divi.c \
	tk_core/tk_env.c \
	tk_core/tk_envctx.c \
	tk_core/tk_epoch.c \
	tk_core/tk_fat.c \
	tk_core/tk_hal_tkgdi.c \
	tk_core/tk_hal_snd.c \
	tk_core/tk_hal_midi.c \
	tk_core/tk_irq.c \
	tk_core/tk_mmap.c \
	tk_core/tk_mmcell.c \
	tk_core/tk_mmllist.c \
	tk_core/tk_mmpage.c \
	tk_core/tk_msgbuf.c \
	tk_core/tk_neuron.c \
	tk_core/tk_peload.c \
	tk_core/tk_peload_pbo.c \
	tk_core/tk_ps2keyb.c \
	tk_core/tk_puts.c \
	tk_core/tk_rwad.c \
	tk_core/tk_shcmd.c \
	tk_core/tk_spi.c \
	tk_core/tk_syscall.c \
	tk_core/tk_usb.c \
	tk_core/tk_vf_fat.c \
	tk_core/tk_vf_ird.c \
	tk_core/tk_vf_wad4.c \
	tk_core/tk_vfile.c \
	tk_core/tk_vmem.c \
	tk_core/tk_wad4.c \
	\
	tk_core/tkgdi_blitupdate.c \
	tk_core/tkgdi_drawcon.c \
	\
	tk_core/tku_bigint.c \
	\
	tk_core/lva_array.c \
	tk_core/lva_strdup.c \
	tk_core/lva_tagobj.c \
	tk_core/lva_tagopr.c \
	tk_core/lva_varobj.c \
	\
	inttypes.c \
	wchar.c \
	wctype.c \

TKRA_SRCS = \
	tkrast/tkr_blend.c			\
	tkrast/tkr_blend_bjx2.c		\
	tkrast/tkr_context.c		\
	tkrast/tkr_edge.c			\
	tkrast/tkr_glbegin.c		\
	tkrast/tkr_glenable.c		\
	tkrast/tkr_glgpa.c			\
	tkrast/tkr_glmatrix.c		\
	tkrast/tkr_gltex.c			\
	tkrast/tkr_matrix.c			\
	tkrast/tkr_multi.c			\
	tkrast/tkr_span.c			\
	tkrast/tkr_span_bjx2.c		\
	tkrast/tkr_span_zt.c		\
	tkrast/tkr_span_zt_bjx2.c	\
	tkrast/tkr_span_bf.c		\
	tkrast/tkr_span_bf_bjx2.c	\
	tkrast/tkr_span_hzt.c		\
	tkrast/tkr_teximg.c			\
	tkrast/tkr_trans.c			\

SRCS_TKGDI = \
	tkrast/tkr_multi.c \
	tk_gdi/tk_codec_cram.c \
	tk_gdi/tk_ramavi.c \
	tk_gdi/tk_qoilz_dec.c \
	tk_gdi/tkg_display.c


all: includes libs apps

includes: FORCE
#	make -C pdpc201 -f Makefile.rv64 includes
#	cp -rf pdpc201/*.h	$(BUILD)/include

libs2: FORCE
#	make -C pdpc201 -f Makefile.rv64 libs
#	cp pdpc201/*.a		$(BUILD)
#	cp pdpc201/crt0.o	$(BUILD)

# libs: libs2 libvxcore_rv64.a libclib_rv64.a
libs: libs2 libclib_rv64.a libcdll_rv64.a libtkgdi_rv64.a \
	libvxcore_rv64.a
#	libtkgl_rv64.a
# libs: libs2 libcdll_rv64.a

apps: FORCE
#	make -C pdpc201 -f Makefile.vx86 apps
#	cp pdpc201/*.exe	$(BUILD)

crt0_rv64.o:  e_testkern_rv64.S
	$(CC) -o crt0_rv64.o e_testkern_rv64.S $(COPTS)

libvxcore_rv64.a: $(SRCS_CLIB) crt0_rv64.o
	$(CC) -o vxcore_rv64.o vxcore_multi.c $(COPTS)
	$(AR) -rc libvxcore_rv64.a vxcore_rv64.o crt0_rv64.o

libclib_rv64.a: $(SRCS_CLIB) crt0_rv64.o
	$(CC) -o clib_rv64.o libc_multi.c $(COPTS)
	$(AR) -rc libclib_rv64.a clib_rv64.o crt0_rv64.o

libcdll_rv64.a: $(SRCS_CLIB) crt0_rv64.o
	$(CC) -o cdll_rv64.o libcdll_multi.c $(COPTS)
	$(AR) -rc libcdll_rv64.a cdll_rv64.o crt0_rv64.o

libtkgdi_rv64.a: $(SRCS_CLIB) $(SRCS_TKGDI)
	$(CC) -o libtkgdi_rv64.o tkgdi_multi.c $(COPTS)
	$(AR) -rc libtkgdi_rv64.a libtkgdi_rv64.o

libtkgl_rv64.a: $(SRCS_CLIB) $(TKRA_SRCS)
	$(CC) -o libtkgl_rv64.o tkgl_multi.c $(COPTS)
	$(AR) -rc libtkgl_rv64.a libtkgl_rv64.o


FORCE:

.c.o:
	$(CC) $(COPTS) $<

all: includes libs apps

